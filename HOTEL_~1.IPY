{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.set_option('display.max_colwidth',120)\n",
    "pd.set_option('display.max_row',300)\n",
    "np.set_printoptions(suppress=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata=pd.read_csv('C:/Users/user/Desktop/IVY WORK BOOK/PYTHON/Python Datasets/Classification Datasets/hotel_bookings.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_year</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>arrival_date_day_of_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>...</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>304.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>98.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          hotel  is_canceled  lead_time  arrival_date_year arrival_date_month  \\\n",
       "0  Resort Hotel            0        342               2015               July   \n",
       "1  Resort Hotel            0        737               2015               July   \n",
       "2  Resort Hotel            0          7               2015               July   \n",
       "3  Resort Hotel            0         13               2015               July   \n",
       "4  Resort Hotel            0         14               2015               July   \n",
       "\n",
       "   arrival_date_week_number  arrival_date_day_of_month  \\\n",
       "0                        27                          1   \n",
       "1                        27                          1   \n",
       "2                        27                          1   \n",
       "3                        27                          1   \n",
       "4                        27                          1   \n",
       "\n",
       "   stays_in_weekend_nights  stays_in_week_nights  adults  ...  deposit_type  \\\n",
       "0                        0                     0       2  ...    No Deposit   \n",
       "1                        0                     0       2  ...    No Deposit   \n",
       "2                        0                     1       1  ...    No Deposit   \n",
       "3                        0                     1       1  ...    No Deposit   \n",
       "4                        0                     2       2  ...    No Deposit   \n",
       "\n",
       "   agent company days_in_waiting_list customer_type   adr  \\\n",
       "0    NaN     NaN                    0     Transient   0.0   \n",
       "1    NaN     NaN                    0     Transient   0.0   \n",
       "2    NaN     NaN                    0     Transient  75.0   \n",
       "3  304.0     NaN                    0     Transient  75.0   \n",
       "4  240.0     NaN                    0     Transient  98.0   \n",
       "\n",
       "   required_car_parking_spaces  total_of_special_requests  reservation_status  \\\n",
       "0                            0                          0           Check-Out   \n",
       "1                            0                          0           Check-Out   \n",
       "2                            0                          0           Check-Out   \n",
       "3                            0                          0           Check-Out   \n",
       "4                            0                          1           Check-Out   \n",
       "\n",
       "  reservation_status_date  \n",
       "0              2015-07-01  \n",
       "1              2015-07-01  \n",
       "2              2015-07-02  \n",
       "3              2015-07-02  \n",
       "4              2015-07-03  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 119390 entries, 0 to 119389\n",
      "Data columns (total 20 columns):\n",
      "is_canceled                       119390 non-null int64\n",
      "lead_time                         119390 non-null int64\n",
      "arrival_date_month                119390 non-null object\n",
      "stays_in_weekend_nights           119390 non-null int64\n",
      "stays_in_week_nights              119390 non-null int64\n",
      "meal                              119390 non-null object\n",
      "market_segment                    119390 non-null object\n",
      "distribution_channel              119390 non-null object\n",
      "is_repeated_guest                 119390 non-null int64\n",
      "previous_cancellations            119390 non-null int64\n",
      "previous_bookings_not_canceled    119390 non-null int64\n",
      "reserved_room_type                119390 non-null object\n",
      "assigned_room_type                119390 non-null object\n",
      "booking_changes                   119390 non-null int64\n",
      "deposit_type                      119390 non-null object\n",
      "days_in_waiting_list              119390 non-null int64\n",
      "customer_type                     119390 non-null object\n",
      "required_car_parking_spaces       119390 non-null int64\n",
      "total_of_special_requests         119390 non-null int64\n",
      "reservation_status                119390 non-null object\n",
      "dtypes: int64(11), object(9)\n",
      "memory usage: 18.2+ MB\n"
     ]
    }
   ],
   "source": [
    "Resortdata.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "is_canceled                       0\n",
       "lead_time                         0\n",
       "arrival_date_month                0\n",
       "stays_in_weekend_nights           0\n",
       "stays_in_week_nights              0\n",
       "meal                              0\n",
       "market_segment                    0\n",
       "distribution_channel              0\n",
       "is_repeated_guest                 0\n",
       "previous_cancellations            0\n",
       "previous_bookings_not_canceled    0\n",
       "reserved_room_type                0\n",
       "assigned_room_type                0\n",
       "booking_changes                   0\n",
       "deposit_type                      0\n",
       "days_in_waiting_list              0\n",
       "customer_type                     0\n",
       "required_car_parking_spaces       0\n",
       "total_of_special_requests         0\n",
       "reservation_status                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "is_canceled                         2\n",
       "lead_time                         479\n",
       "arrival_date_month                 12\n",
       "stays_in_weekend_nights            17\n",
       "stays_in_week_nights               35\n",
       "meal                                5\n",
       "market_segment                      8\n",
       "distribution_channel                5\n",
       "is_repeated_guest                   2\n",
       "previous_cancellations             15\n",
       "previous_bookings_not_canceled     73\n",
       "reserved_room_type                 10\n",
       "assigned_room_type                 12\n",
       "booking_changes                    21\n",
       "deposit_type                        3\n",
       "days_in_waiting_list              128\n",
       "customer_type                       4\n",
       "required_car_parking_spaces         5\n",
       "total_of_special_requests           6\n",
       "reservation_status                  3\n",
       "dtype: int64"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_cols=['is_canceled','arrival_date_month','stays_in_week_nights','stays_in_weekend_nights','meal','market_segment',\n",
    "        'distribution_channel','is_repeated_guest','previous_cancellations','reserved_room_type','assigned_room_type',\n",
    "        'booking_changes','deposit_type','customer_type','required_car_parking_spaces','total_of_special_requests']\n",
    "\n",
    "cont_cols=['days_in_waiting_list','previous_bookings_not_canceled','lead_time']\n",
    "\n",
    "\n",
    "map_cols=['reservation_status','deposit_type','customer_type','reserved_room_type','assigned_room_type',\n",
    "           'distribution_channel','market_segment','meal' ,'arrival_date_month' ]\n",
    "\n",
    "\n",
    "Target=['reservation_status']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata.drop(labels=['reservation_status_date','company','hotel','adults','children','babies'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata.drop(labels=['arrival_date_year','arrival_date_day_of_month'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata.drop(labels=['agent'],axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata.drop(labels=['country'],axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata.drop(labels=['arrival_date_week_number'],axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata.drop(labels=['adr'],axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>meal</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>previous_cancellations</th>\n",
       "      <th>previous_bookings_not_canceled</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>booking_changes</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>July</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>3</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>July</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>4</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>July</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>BB</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>July</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>BB</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>July</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>BB</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119385</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>August</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>BB</td>\n",
       "      <td>Offline TA/TO</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119386</td>\n",
       "      <td>0</td>\n",
       "      <td>102</td>\n",
       "      <td>August</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>BB</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>E</td>\n",
       "      <td>E</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119387</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>August</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>BB</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>D</td>\n",
       "      <td>D</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119388</td>\n",
       "      <td>0</td>\n",
       "      <td>109</td>\n",
       "      <td>August</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>BB</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119389</td>\n",
       "      <td>0</td>\n",
       "      <td>205</td>\n",
       "      <td>August</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>HB</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>119390 rows Ã— 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        is_canceled  lead_time arrival_date_month  stays_in_weekend_nights  \\\n",
       "0                 0        342               July                        0   \n",
       "1                 0        737               July                        0   \n",
       "2                 0          7               July                        0   \n",
       "3                 0         13               July                        0   \n",
       "4                 0         14               July                        0   \n",
       "...             ...        ...                ...                      ...   \n",
       "119385            0         23             August                        2   \n",
       "119386            0        102             August                        2   \n",
       "119387            0         34             August                        2   \n",
       "119388            0        109             August                        2   \n",
       "119389            0        205             August                        2   \n",
       "\n",
       "        stays_in_week_nights meal market_segment distribution_channel  \\\n",
       "0                          0   BB         Direct               Direct   \n",
       "1                          0   BB         Direct               Direct   \n",
       "2                          1   BB         Direct               Direct   \n",
       "3                          1   BB      Corporate            Corporate   \n",
       "4                          2   BB      Online TA                TA/TO   \n",
       "...                      ...  ...            ...                  ...   \n",
       "119385                     5   BB  Offline TA/TO                TA/TO   \n",
       "119386                     5   BB      Online TA                TA/TO   \n",
       "119387                     5   BB      Online TA                TA/TO   \n",
       "119388                     5   BB      Online TA                TA/TO   \n",
       "119389                     7   HB      Online TA                TA/TO   \n",
       "\n",
       "        is_repeated_guest  previous_cancellations  \\\n",
       "0                       0                       0   \n",
       "1                       0                       0   \n",
       "2                       0                       0   \n",
       "3                       0                       0   \n",
       "4                       0                       0   \n",
       "...                   ...                     ...   \n",
       "119385                  0                       0   \n",
       "119386                  0                       0   \n",
       "119387                  0                       0   \n",
       "119388                  0                       0   \n",
       "119389                  0                       0   \n",
       "\n",
       "        previous_bookings_not_canceled reserved_room_type assigned_room_type  \\\n",
       "0                                    0                  C                  C   \n",
       "1                                    0                  C                  C   \n",
       "2                                    0                  A                  C   \n",
       "3                                    0                  A                  A   \n",
       "4                                    0                  A                  A   \n",
       "...                                ...                ...                ...   \n",
       "119385                               0                  A                  A   \n",
       "119386                               0                  E                  E   \n",
       "119387                               0                  D                  D   \n",
       "119388                               0                  A                  A   \n",
       "119389                               0                  A                  A   \n",
       "\n",
       "        booking_changes deposit_type  days_in_waiting_list customer_type  \\\n",
       "0                     3   No Deposit                     0     Transient   \n",
       "1                     4   No Deposit                     0     Transient   \n",
       "2                     0   No Deposit                     0     Transient   \n",
       "3                     0   No Deposit                     0     Transient   \n",
       "4                     0   No Deposit                     0     Transient   \n",
       "...                 ...          ...                   ...           ...   \n",
       "119385                0   No Deposit                     0     Transient   \n",
       "119386                0   No Deposit                     0     Transient   \n",
       "119387                0   No Deposit                     0     Transient   \n",
       "119388                0   No Deposit                     0     Transient   \n",
       "119389                0   No Deposit                     0     Transient   \n",
       "\n",
       "        required_car_parking_spaces  total_of_special_requests  \\\n",
       "0                                 0                          0   \n",
       "1                                 0                          0   \n",
       "2                                 0                          0   \n",
       "3                                 0                          0   \n",
       "4                                 0                          1   \n",
       "...                             ...                        ...   \n",
       "119385                            0                          0   \n",
       "119386                            0                          2   \n",
       "119387                            0                          4   \n",
       "119388                            0                          0   \n",
       "119389                            0                          2   \n",
       "\n",
       "       reservation_status  \n",
       "0               Check-Out  \n",
       "1               Check-Out  \n",
       "2               Check-Out  \n",
       "3               Check-Out  \n",
       "4               Check-Out  \n",
       "...                   ...  \n",
       "119385          Check-Out  \n",
       "119386          Check-Out  \n",
       "119387          Check-Out  \n",
       "119388          Check-Out  \n",
       "119389          Check-Out  \n",
       "\n",
       "[119390 rows x 20 columns]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>meal</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>previous_cancellations</th>\n",
       "      <th>previous_bookings_not_canceled</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>booking_changes</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "      <td>119116.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>0.370320</td>\n",
       "      <td>103.441889</td>\n",
       "      <td>5.483193</td>\n",
       "      <td>0.928398</td>\n",
       "      <td>2.500781</td>\n",
       "      <td>0.555761</td>\n",
       "      <td>4.929413</td>\n",
       "      <td>2.584699</td>\n",
       "      <td>0.031927</td>\n",
       "      <td>0.087125</td>\n",
       "      <td>0.135196</td>\n",
       "      <td>0.991613</td>\n",
       "      <td>1.331828</td>\n",
       "      <td>0.220886</td>\n",
       "      <td>0.124803</td>\n",
       "      <td>1.755381</td>\n",
       "      <td>2.135968</td>\n",
       "      <td>0.062653</td>\n",
       "      <td>0.572459</td>\n",
       "      <td>0.649929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>0.482892</td>\n",
       "      <td>106.207379</td>\n",
       "      <td>3.532911</td>\n",
       "      <td>0.998863</td>\n",
       "      <td>1.909335</td>\n",
       "      <td>1.068940</td>\n",
       "      <td>1.267485</td>\n",
       "      <td>0.908048</td>\n",
       "      <td>0.175806</td>\n",
       "      <td>0.844795</td>\n",
       "      <td>1.465279</td>\n",
       "      <td>1.698494</td>\n",
       "      <td>1.879692</td>\n",
       "      <td>0.651813</td>\n",
       "      <td>0.334586</td>\n",
       "      <td>12.259963</td>\n",
       "      <td>0.576367</td>\n",
       "      <td>0.245540</td>\n",
       "      <td>0.793213</td>\n",
       "      <td>0.497767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>159.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>629.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>193.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         is_canceled      lead_time  arrival_date_month  \\\n",
       "count  119116.000000  119116.000000       119116.000000   \n",
       "mean        0.370320     103.441889            5.483193   \n",
       "std         0.482892     106.207379            3.532911   \n",
       "min         0.000000       0.000000            0.000000   \n",
       "25%         0.000000      18.000000            2.000000   \n",
       "50%         0.000000      69.000000            6.000000   \n",
       "75%         1.000000     159.000000            8.000000   \n",
       "max         1.000000     629.000000           11.000000   \n",
       "\n",
       "       stays_in_weekend_nights  stays_in_week_nights           meal  \\\n",
       "count            119116.000000         119116.000000  119116.000000   \n",
       "mean                  0.928398              2.500781       0.555761   \n",
       "std                   0.998863              1.909335       1.068940   \n",
       "min                   0.000000              0.000000       0.000000   \n",
       "25%                   0.000000              1.000000       0.000000   \n",
       "50%                   1.000000              2.000000       0.000000   \n",
       "75%                   2.000000              3.000000       0.000000   \n",
       "max                  19.000000             50.000000       4.000000   \n",
       "\n",
       "       market_segment  distribution_channel  is_repeated_guest  \\\n",
       "count   119116.000000         119116.000000      119116.000000   \n",
       "mean         4.929413              2.584699           0.031927   \n",
       "std          1.267485              0.908048           0.175806   \n",
       "min          0.000000              0.000000           0.000000   \n",
       "25%          4.000000              3.000000           0.000000   \n",
       "50%          5.000000              3.000000           0.000000   \n",
       "75%          6.000000              3.000000           0.000000   \n",
       "max          7.000000              4.000000           1.000000   \n",
       "\n",
       "       previous_cancellations  previous_bookings_not_canceled  \\\n",
       "count           119116.000000                   119116.000000   \n",
       "mean                 0.087125                        0.135196   \n",
       "std                  0.844795                        1.465279   \n",
       "min                  0.000000                        0.000000   \n",
       "25%                  0.000000                        0.000000   \n",
       "50%                  0.000000                        0.000000   \n",
       "75%                  0.000000                        0.000000   \n",
       "max                 26.000000                       72.000000   \n",
       "\n",
       "       reserved_room_type  assigned_room_type  booking_changes   deposit_type  \\\n",
       "count       119116.000000       119116.000000    119116.000000  119116.000000   \n",
       "mean             0.991613            1.331828         0.220886       0.124803   \n",
       "std              1.698494            1.879692         0.651813       0.334586   \n",
       "min              0.000000            0.000000         0.000000       0.000000   \n",
       "25%              0.000000            0.000000         0.000000       0.000000   \n",
       "50%              0.000000            0.000000         0.000000       0.000000   \n",
       "75%              3.000000            3.000000         0.000000       0.000000   \n",
       "max              9.000000           11.000000        21.000000       2.000000   \n",
       "\n",
       "       days_in_waiting_list  customer_type  required_car_parking_spaces  \\\n",
       "count         119116.000000  119116.000000                119116.000000   \n",
       "mean               1.755381       2.135968                     0.062653   \n",
       "std               12.259963       0.576367                     0.245540   \n",
       "min                0.000000       0.000000                     0.000000   \n",
       "25%                0.000000       2.000000                     0.000000   \n",
       "50%                0.000000       2.000000                     0.000000   \n",
       "75%                0.000000       2.000000                     0.000000   \n",
       "max              193.000000       3.000000                     8.000000   \n",
       "\n",
       "       total_of_special_requests  reservation_status  \n",
       "count              119116.000000       119116.000000  \n",
       "mean                    0.572459            0.649929  \n",
       "std                     0.793213            0.497767  \n",
       "min                     0.000000            0.000000  \n",
       "25%                     0.000000            0.000000  \n",
       "50%                     0.000000            1.000000  \n",
       "75%                     1.000000            1.000000  \n",
       "max                     5.000000            2.000000  "
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x24f8ae3f748>"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Resortdata['days_in_waiting_list'].hist(figsize=(15,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x24f8a7dea08>"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Resortdata.groupby('reservation_status').size().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "is_canceled                         1.0\n",
      "lead_time                         142.0\n",
      "stays_in_weekend_nights             2.0\n",
      "stays_in_week_nights                2.0\n",
      "is_repeated_guest                   0.0\n",
      "previous_cancellations              0.0\n",
      "previous_bookings_not_canceled      0.0\n",
      "booking_changes                     0.0\n",
      "days_in_waiting_list                0.0\n",
      "required_car_parking_spaces         0.0\n",
      "total_of_special_requests           1.0\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "## Detecting outliers\n",
    "\n",
    "Q1=Resortdata.quantile(0.25)\n",
    "Q3=Resortdata.quantile(0.75)\n",
    "IQR=Q3-Q1\n",
    "print(IQR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata=Resortdata[~((Resortdata<(Q1-1.5*IQR))|(Resortdata>(Q3+1.5*IQR))).any(axis=1)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['is_canceled', 'lead_time', 'arrival_date_month',\n",
       "       'stays_in_weekend_nights', 'stays_in_week_nights', 'meal',\n",
       "       'market_segment', 'distribution_channel', 'is_repeated_guest',\n",
       "       'previous_cancellations', 'previous_bookings_not_canceled',\n",
       "       'reserved_room_type', 'assigned_room_type', 'booking_changes',\n",
       "       'deposit_type', 'days_in_waiting_list', 'customer_type',\n",
       "       'required_car_parking_spaces', 'total_of_special_requests',\n",
       "       'reservation_status'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_cols=['is_canceled','arrival_date_month','stays_in_week_nights','stays_in_weekend_nights','meal','market_segment',\n",
    "        'distribution_channel','is_repeated_guest','previous_cancellations','reserved_room_type','assigned_room_type',\n",
    "        'booking_changes','deposit_type','customer_type','required_car_parking_spaces','total_of_special_requests']\n",
    "\n",
    "cont_cols=['days_in_waiting_list','previous_bookings_not_canceled','lead_time']\n",
    "\n",
    "\n",
    "Target=['reservation_status']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "//////////////////////////////////////////////////\n",
      "The p value of is_canceled is 0.0\n",
      "The p value of is_canceled is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of arrival_date_month is 2.340163246573916e-203\n",
      "The p value of arrival_date_month is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of stays_in_week_nights is 0.0\n",
      "The p value of stays_in_week_nights is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of stays_in_weekend_nights is 2.655923875542819e-31\n",
      "The p value of stays_in_weekend_nights is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of meal is 6.030905681525178e-80\n",
      "The p value of meal is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of market_segment is 0.0\n",
      "The p value of market_segment is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of distribution_channel is 0.0\n",
      "The p value of distribution_channel is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of is_repeated_guest is 1.718633714491073e-192\n",
      "The p value of is_repeated_guest is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of previous_cancellations is 0.0\n",
      "The p value of previous_cancellations is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of reserved_room_type is 2.4221446050508284e-131\n",
      "The p value of reserved_room_type is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of assigned_room_type is 0.0\n",
      "The p value of assigned_room_type is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of booking_changes is 0.0\n",
      "The p value of booking_changes is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of deposit_type is 0.0\n",
      "The p value of deposit_type is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of customer_type is 0.0\n",
      "The p value of customer_type is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of required_car_parking_spaces is 0.0\n",
      "The p value of required_car_parking_spaces is releated with Target Variable\n",
      "//////////////////////////////////////////////////\n",
      "The p value of total_of_special_requests is 0.0\n",
      "The p value of total_of_special_requests is releated with Target Variable\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmIAAADUCAYAAAA/Wk+nAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nO3de3wV5bX/8c8yREAFQUQOJVaQglxjgHARhaooIqKARYuHIxE9UlrU2urPov0JaG+08qrKr60eFAhYTlFRBC8VqcWKikKC4a6QKkhEIYJCaAC5rN8f+0m6CTskIMls4Pt+vfZrz6x5ZmbNDuysPPPMjLk7IiIiIlL9Too6AREREZETlQoxERERkYioEBMRERGJiAoxERERkYioEBMRERGJiAoxERERkYjUiDqBI3XmmWd606ZNo05DREREpEK5ublfuHvDsvFjthBr2rQpOTk5UachIiIiUiEzW58orlOTIiIiIhFRISYiIiISERViIiIiIhE5ZseIiYiICOzZs4eCggJ27doVdSoC1KpVi7S0NFJTUyvVXoWYiIjIMaygoIA6derQtGlTzCzqdE5o7s6WLVsoKCigWbNmlVpHpyZFRESOYbt27aJBgwYqwpKAmdGgQYPD6p08IXvEyvu36l69eYiIiBwNKsKSx+H+LNQjJiIiIhIRFWIiIiJS5fLy8njllVdK5+fMmcO4ceOqfL+//vWvj2q7o02FmIiIyHHM3dm/f/9R3ebevXsPe52yhdg111zDqFGjjmZaCakQExERkWq1bt06WrduzY9+9CM6duzIU089xQUXXEDHjh257rrr2LFjBwCjRo2iTZs2pKenc/fddwNQWFjI9773PTp37kznzp15++23ARg7dizDhw+nd+/eDB06lK5du7Jy5crSfV588cXk5uayaNEiunfvTocOHejevTsffvghX3/9NaNHj+bpp58mIyODp59+muzsbG677TYA1q9fT69evUhPT6dXr1588sknANx0003ccccddO/enXPPPZeZM2eWe8yfffYZPXv2JCMjg3bt2rFgwQJGjRrFzp07ycjIYMiQIQAMGDCATp060bZtWyZOnFj6OcS3W7duHe3atSvd9vjx4xk7diwAEyZMKP3MBg8e/M1/WO5+TL46derkRyo2LP/gl4iIyLFm1apVB8U+/vhjNzNfuHChFxYWeo8ePXzHjh3u7j5u3Dh/4IEHfMuWLd6yZUvfv3+/u7t/+eWX7u5+ww03+IIFC9zdff369d6qVSt3dx8zZox37NjRi4uL3d3997//vY8ePdrd3Tdu3OgtWrRwd/dt27b5nj173N193rx5fu2117q7+5QpU3zkyJGlOcbP9+vXz7Ozs93dfdKkSd6/f393d8/KyvJBgwb5vn37fOXKld68efNyP4fx48f7L3/5S3d337t3r2/fvt3d3U899dQD2m3ZssXd3YuLi71t27b+xRdfHNTu448/9rZt25bOP/TQQz5mzBh3d2/cuLHv2rXrgM+srEQ/EyDHE9QzFV41aWbnAU/Hhc4FRgPTQrwpsA643t2/tNjlAo8CfYFi4CZ3XxK2lQX837CdX7r71BDvBGQDtYFXgB+HpEVEROQInHPOOXTr1o2XXnqJVatWceGFFwLw9ddfc8EFF1C3bl1q1arFf//3f3PVVVfRr18/AP72t7+xatWq0u1s376doqIiIHY6sXbt2gBcf/31XH755TzwwAM888wzXHfddQBs27aNrKws1q5di5mxZ8+eCnNduHAhzz//PAA33ngj99xzT+myAQMGcNJJJ9GmTRs2bdpU7jY6d+7MzTffzJ49exgwYAAZGRkJ202YMIFZs2YBsGHDBtauXUuDBg0qzLFEeno6Q4YMYcCAAQwYMKDS65WnwlOT7v6hu2e4ewbQiVhxNQsYBbzu7i2A18M8wJVAi/AaDjwGYGZnAGOArkAXYIyZ1Q/rPBbalqzX5xsfmYiIyAns1FNPBWJnvi6//HLy8vLIy8tj1apVTJo0iRo1arBo0SK+973v8cILL9CnT+xX7/79+1m4cGFp+08//ZQ6deocsE2AJk2a0KBBA5YtW8bTTz9depru/vvv55JLLmHFihW8+OKLR3TH//hbQNSsWbN0+lB9ND179uTNN9+kSZMm3HjjjUybNu2gNm+88QZ/+9vfWLhwIUuXLqVDhw4J86tRo8YB4+ri27z88suMHDmS3NxcOnXqdETj5eId7hixXsA/3X090B+YGuJTgZKysD8wLfTEvQvUM7PGwBXAPHff6u5fAvOAPmFZXXdfGHrBpsVtS0RERL6Bbt268fbbb5Ofnw9AcXExa9asYceOHWzbto2+ffvyyCOPkJeXB0Dv3r35wx/+ULp+STyRwYMH87vf/Y5t27bRvn17INYj1qRJEwCys7NL29apU6e0Z62s7t27M2PGDACmT5/ORRdddNjHuX79es466yxuvfVWbrnlFpYsWQJAampqaa/ctm3bqF+/PqeccgoffPAB7777bun68e0aNWrE5s2b2bJlC7t37+all14CYkXqhg0buOSSS/jd737HV199VTre7kgdbiE2GPhLmG7k7p8BhPezQrwJsCFunYIQO1S8IEH8IGY23MxyzCynsLDwMFMXERE58TRs2JDs7GxuuOEG0tPT6datGx988AFFRUX069eP9PR0vvvd7/Lwww8DsVN3OTk5pKen06ZNGx5//PFytz1o0CBmzJjB9ddfXxq75557uPfee7nwwgvZt29fafySSy5h1apVpYP1402YMIEpU6aQnp7OU089xaOPPnrYx/nGG2+QkZFBhw4deO655/jxj38MwPDhw0tPJ/bp04e9e/eSnp7O/fffT7du3UrXj2+XmprK6NGj6dq1K/369aNVq1YA7Nu3j//6r/+iffv2dOjQgZ/85CfUq1fvsHONZ5UdimVmJwMbgbbuvsnMvnL3enHLv3T3+mb2MvAbd38rxF8H7gEuBWq6+y9D/H5ipznfDO0vC/EewD3ufvWh8snMzPScnJzDPNySXBPHNSpNRESONatXr6Z169ZRpyFxEv1MzCzX3TPLtj2cHrErgSXuXjJSblM4rUh43xziBcDZceulESvgDhVPSxAXEREROa4dTiF2A/8+LQkwB8gK01nA7Lj4UIvpBmwLpy7nAr3NrH4YpN8bmBuWFZlZt3DF5dC4bYmIiIiUWr58ORkZGQe8unbtGnVaR6xSD/02s1OAy4EfxIXHAc+Y2S3AJ8B1If4KsVtX5BM79TgMwN23mtkvgMWh3YPuvjVM/5B/377ir+ElIiIicoD27dsf8gKCY02lCjF3LwYalIltIXYVZdm2DowsZzuTgckJ4jlAu4PXEBERETl+6RFHIiIiIhFRISYiIiISERViIiIiUmU+//xzBg8eTPPmzWnTpg19+/ZlzZo1Vb7f00477bDajx07lvHjx1dRNuWr1BgxERERObbZA+XcRPMI+ZiKb77p7gwcOJCsrKzSO+fn5eWxadMmWrZseVTzOVapR0xERESqxPz580lNTWXEiBGlsZK73/fq1YuOHTvSvn17Zs+O3bVq3bp1tG7dmltvvZW2bdvSu3dvdu7cCUB+fj6XXXYZ559/Ph07duSf//wnAA899BCdO3cmPT2dMWPGJMyjvDa/+tWvOO+887jsssv48MMPq+pjOCQVYiIiIlIlVqxYQadOnQ6K16pVi1mzZrFkyRLmz5/PXXfdVfpA77Vr1zJy5EhWrlxJvXr1eO655wAYMmQII0eOZOnSpbzzzjs0btyY1157jbVr17Jo0SLy8vLIzc3lzTffPGBf5bXJzc1lxowZvP/++zz//PMsXrz4oDyrg05NioiISLVyd+677z7efPNNTjrpJD799FM2bYo9uKdZs2ZkZGQA0KlTJ9atW0dRURGffvopAwcOBGKFHMSKrNdee40OHToAsGPHDtauXUvPnj1L91Vem6KiIgYOHMgpp5wCwDXXXFM9B1+GCjERERGpEm3btmXmzJkHxadPn05hYSG5ubmkpqbStGlTdu3aBUDNmjVL26WkpLBz507Key62u3Pvvffygx/8IOHyQ7V55JFHsPIePl2NdGpSREREqsSll17K7t27eeKJJ0pjixcvZv369Zx11lmkpqYyf/581q9ff8jt1K1bl7S0NF544QUAdu/eTXFxMVdccQWTJ09mx44dAHz66ads3rz5gHXLa9OzZ09mzZrFzp07KSoq4sUXXzyah15p6hETERGRKmFmzJo1izvvvJNx48ZRq1YtmjZtytixY7njjjvIzMwkIyODVq1aVbitp556ih/84AeMHj2a1NRUnn32WXr37s3q1au54IILgNgtK/785z9z1llnla5XXpuOHTvy/e9/n4yMDM455xx69OhRNR9CBay87r5kl5mZ6Tk5OUe0bnk9kcfoRyEiIiew1atX07p166jTkDiJfiZmluvumWXbVurUpJnVM7OZZvaBma02swvM7Awzm2dma8N7/dDWzGyCmeWb2TIz6xi3nazQfq2ZZcXFO5nZ8rDOBEuGk7YiIiIiVayyY8QeBV5191bA+cBqYBTwuru3AF4P8wBXAi3CazjwGICZnQGMAboCXYAxJcVbaDM8br0+3+ywRERERJJfhYWYmdUFegKTANz9a3f/CugPTA3NpgIDwnR/YJrHvAvUM7PGwBXAPHff6u5fAvOAPmFZXXdf6LHzpNPitiUiIiJy3KpMj9i5QCEwxczeN7MnzexUoJG7fwYQ3ktGxjUBNsStXxBih4oXJIiLiIiIHNcqU4jVADoCj7l7B+Bf/Ps0ZCKJxnf5EcQP3rDZcDPLMbOcwsLCQ2ctIiIikuQqU4gVAAXu/l6Yn0msMNsUTisS3jfHtT87bv00YGMF8bQE8YO4+0R3z3T3zIYNG1YidREREZHkVWEh5u6fAxvM7LwQ6gWsAuYAJVc+ZgGzw/QcYGi4erIbsC2cupwL9Daz+mGQfm9gblhWZGbdwtWSQ+O2JSIiIsewzz//nMGDB9O8eXPatGlD3759mThxIv369fvG237jjTcqtZ2vv/6aO++8k+bNm9OiRQv69+9PQUFBhetlZ2ezcWPCvqGjprI3dL0dmG5mJwMfAcOIFXHPmNktwCfAdaHtK0BfIB8oDm1x961m9gug5KmaD7r71jD9QyAbqA38NbxERETkKDnaN4aqzL033Z2BAweSlZXFjBkzAMjLy6v2u9jfd999FBUVsWbNGlJSUpgyZQrXXnst77333iEfc5SdnU27du341re+VWW5VaoQc/c84KCbkBHrHSvb1oGR5WxnMjA5QTwHaFeZXEREROTYMH/+fFJTUxkxYkRpLCMjg6+++orXX3+dQYMGsWLFCjp16sSf//xnzIzc3Fx++tOfsmPHDs4880yys7Np3Lgx+fn5jBgxgsLCQlJSUnj22WcP2NfixYsZPnw4zz33HOeee25pvLi4mClTpvDxxx+TkpICwLBhw5g8eTJ///vfad68Of369WPFihUAjB8/nh07dtCuXTtycnIYMmQItWvXZuHChdSuXfuof0Z61qSIiIhUiZIiK5H333+fRx55hFWrVvHRRx/x9ttvs2fPHm6//XZmzpxJbm4uN998Mz//+c8BGDJkCCNHjmTp0qW88847NG7cuHRb77zzDiNGjGD27NkHFGEA+fn5fPvb36Zu3boHxDMzM1m5cmW5uQ8aNIjMzEymT59OXl5elRRhoGdNioiISAS6dOlCWlrsWr2MjAzWrVtHvXr1WLFiBZdffjkA+/bto3HjxhQVFfHpp58ycOBAAGrVqlW6ndWrVzN8+HBee+21hKcQ3T3h6cfy4tVNhZiIiIhUibZt2zJz5syEy2rWrFk6nZKSwt69e3F32rZty8KFCw9ou3379nL30bhxY3bt2sX7779fWohdccUVbNq0iczMTB599FHWr19PUVERderUKV1vyZIlXH311dSoUYP9+/eXxnft2nVEx3qkdGpSREREqsSll17K7t27eeKJJ0pjixcv5h//+EfC9ueddx6FhYWlhdiePXtYuXIldevWJS0tjRdeeAGA3bt3U1xcDEC9evV4+eWXue+++3jjjTcAmDt3Lnl5eTz55JOceuqpZGVl8dOf/pR9+/YBMG3aNIqLi7n00ktp1KgRmzdvZsuWLezevZuXXnqpNJ86depQVFR01D+XeCrEREREpEqYGbNmzWLevHk0b96ctm3bMnbs2HKvQjz55JOZOXMmP/vZzzj//PPJyMjgnXfeAeCpp55iwoQJpKen0717dz7//PPS9Ro1asSLL77IyJEjee+99w7a7m9+8xtq1apFy5YtadGiBc8++yyzZs3CzEhNTWX06NF07dqVfv360apVq9L1brrpJkaMGEFGRgY7d+48yp9OjHllrj9NQpmZmZ6Tk3NE65Z3SvgY/ShEROQEtnr1alq3bh11GhIn0c/EzHLd/aA7UKhHTERERCQiKsREREREIqJCTERERCQiKsREREREIqJCTERERCQiKsREREREIlKpQszM1pnZcjPLM7OcEDvDzOaZ2drwXj/EzcwmmFm+mS0zs45x28kK7deaWVZcvFPYfn5YN/pnDoiIiMg3YmbcddddpfPjx49n7Nixh7WNyZMn0759e9LT02nXrh2zZ88G4OKLL+ZIb2OVTA7nEUeXuPsXcfOjgNfdfZyZjQrzPwOuBFqEV1fgMaCrmZ0BjAEyAQdyzWyOu38Z2gwH3gVeAfoAf/1GRyYiIiKl7IGj28fhYyq++WbNmjV5/vnnuffeeznzzDMPex8FBQX86le/YsmSJZx++uns2LGDwsLCI0k3aX2TU5P9galheiowIC4+zWPeBeqZWWPgCmCeu28Nxdc8oE9YVtfdF3rs7rLT4rYlIiIix6gaNWowfPhwHn744YOWrV+/nl69epGenk6vXr345JNPDmqzefNm6tSpw2mnnQbAaaedRrNmzUqXP/vss3Tp0oWWLVuyYMECIPasyGHDhtG+fXs6dOjA/PnzAejbty/Lli0DoEOHDjz44IMA3H///Tz55JNH98APQ2ULMQdeM7NcMxseYo3c/TOA8H5WiDcBNsStWxBih4oXJIiLiIjIMW7kyJFMnz6dbdu2HRC/7bbbGDp0KMuWLWPIkCHccccdB617/vnn06hRI5o1a8awYcN48cUXD1i+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hukC4GyAsPx0YGt8vMw65cUT7X+iu2e6e2bDhg0PJ3URERGRpFOZqyYbmlm9MF0buAxYDcwHBoVmWcDsMD0nzBOW/93dPcQHh6sqmwEtgEXAYqBFuArzZGID+uccjYMTERERSWY1Km5CY2BquLrxJOAZd3/JzFYBM8zsl8D7wKTQfhLwlJnlE+sJGwzg7ivN7BlgFbAXGOnu+wDM7DZgLpACTHb3lUftCEVERESSlMU6q449mZmZnpOTc8g29kCi4WfA2MTHfIx+FCIiIpLkzCzX3TPLxnVnfREREZGIqBATERERiYgKMREREZGIqBATERERiYgKMREREZGIqBATERERiYgKMREREZGIqBATERERiYgKMREREZGIqBATERERiYgKMREREZGIqBATERERiUiFhZiZnW1m881stZmtNLMfh/gZZjbPzNaG9/ohbmY2wczyzWyZmXWM21ZWaL/WzLLi4p3MbHlYZ4KZlfO0bhEREZHjR2V6xPYCd7l7a6AbMNLM2gCjgNfdvQXwepgHuBJoEV7DgccgVrgBY4CuQBdgTEnxFtoMj1uvzzc/NBEREZHkVmEh5u6fufuSMF0ErAaaAP2BqaHZVGBAmO4PTPOYd4F6ZtYYuAKY5+5b3f1LYB7QJyyr6+4L3d2BaXHbEhERETluHdYYMTNrCnQA3gMauftnECvWgLNCsybAhrjVCkLsUPGCBHERERGR41qlCzEzOw14DrjT3bcfqmmCmB9BPFEOw80sx8xyCgsLK0pZREREJKlVqhAzs1RiRdh0d38+hDeF04qE980hXgCcHbd6GrCxgnhagvhB3H2iu2e6e2bDhg0rk7qIiIhI0qrMVZMGTAJWu/vv4xbNAUqufMwCZsfFh4arJ7sB28Kpy7lAbzOrHwbp9wbmhmVFZtYt7Gto3LZEREREjls1KtHmQuBGYLmZ5YXYfcA44BkzuwX4BLguLHsF6AvkA8XAMAB332pmvwAWh3YPuvvWMP1DIBuoDfw1vERERESOaxUWYu7+FonHcQH0StDegZHlbGsyMDlBPAdoV1EuIiIiIscT3VlfREREJCIqxEREREQiokJMREREJCIqxEREREQiokJMREREJCIqxEREREQiokJMREREJCIqxEREREQiokJMREREJCIqxEREREQiokJMREREJCIVFmJmNtnMNpvZirjYGWY2z8zW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\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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ZUn3SToMaBwR7wEkz9svUWgCvJ11fHES2128OEfczMzMrEarSCFWG+gM3B0RnYB/8q9hyFxyze+KvYjvemJpqKRCSYVr1qzZfdZmZmZm1VxFCrFioDgi/p5sTyVTmK1KhhVJnldntT8u6/imwLvlxJvmiO8iIu6JiIKIKGjUqFEFUjczM7M0vf/++wwcOJAWLVrQrl07zj//fO655x769u37uc/97LPPVug8n332Gddffz0tWrSgZcuW9OvXj+Li4nKPGz9+PO++m7MkqTTlFmIR8T7wtqTWSagXsAiYDmy/8nEI8FjyejowOLl6shuwLhm6nAH0lnREMkm/NzAj2VciqVtyteTgrHOZmZlZJZAq91EREcGAAQM444wzeP3111m0aBG/+MUvSu8rua/cdNNNlJSUsHTpUpYtW0b//v254IILyrx10nbVohBLfA+YJGkBkA/8ArgNOEfSMuCcZBvgKeANYDlwL/BdgIj4EPgpMDd53JrEAL4D3Jcc8zrwp8/3sczMzCxts2bNok6dOlx99dWlsfz8fHr06MH69eu58MILadOmDYMGDSotiubNm8eXv/xlunTpwrnnnst7770HwPLlyzn77LM56aST6Ny5M6+//voO7zV37lw6derEG2+8sUN8w4YNjBs3jttvv51atWoBcPnll1O3bl3++te/smLFCjp06FDafvTo0YwaNYqpU6dSWFjIoEGDyM/P59NPP62Sn1GFbnEUEUXALqvBkukd27ltAMPKOM9YYGyOeCHQYdcjzMzMbH/12muv0aVLl5z7Xn75ZRYuXMgXv/hFTjvtNF588UW6du3K9773PR577DEaNWrElClT+MlPfsLYsWMZNGgQw4cPZ8CAAWzcuJFt27bx9tuZawBfeuml0uOOP/74Hd5n+fLlHH/88TRo0GCHeEFBAQsXLqRFixY587vwwgu56667GD16NAUFuUqgyuF7TZqZmdk+d8opp9C0aWaKeH5+PitWrKBhw4a89tprnHPOOQBs3bqVY489lpKSEt555x0GDBgAQL169UrPs3jxYoYOHcrTTz/NF7/4xV3eJyLItU58WfF9zYWYmZmZVYn27dszderUnPvq1q1b+rpWrVps2bKFiKB9+/bMnj17h7affPJJme9x7LHHsnHjRl5++eXSQuzcc89l1apVFBQUcOedd7Jy5UpKSkqoX79+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\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Analysing relationship between target categorical varibale with categorical variable\n",
    "from scipy.stats import chi2_contingency\n",
    "\n",
    "for j in cat_cols:\n",
    "    print('/'*50)\n",
    "    crosstabresult=pd.crosstab(index=Resortdata[j],columns=Resortdata['reservation_status'])\n",
    "    crosstabresult.plot.bar(figsize=(10,3), color=['green','blue'])\n",
    "    ChiSqResult = chi2_contingency(crosstabresult)\n",
    "    print(\"The p value of\",j,\"is\",  ChiSqResult[1])\n",
    "    if(ChiSqResult[1]<0.05):\n",
    "        print(\"The p value of\",j,\"is releated with Target Variable\")\n",
    "    else:\n",
    "        print(\"The p value of\",j,\"is not releated with Target Variable\")\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "************************************************************\n",
      "The p values is  1.3868418128843273e-128\n",
      "The p value of days_in_waiting_list is releated with Target Variable\n",
      "************************************************************\n",
      "The p values is  2.021752350345804e-92\n",
      "The p value of previous_bookings_not_canceled is releated with Target Variable\n",
      "************************************************************\n",
      "The p values is  0.0\n",
      "The p value of lead_time is releated with Target Variable\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import f_oneway\n",
    "for i in cont_cols:\n",
    "    print('*'*60)\n",
    "    Annovacategory=Resortdata.groupby('reservation_status')[i].apply(list)\n",
    "    Annovaresult=f_oneway(*Annovacategory)\n",
    "    print(\"The p values is \", Annovaresult[1])\n",
    "    if(Annovaresult[1]<0.05):\n",
    "        print(\"The p value of\",i,\"is releated with Target Variable\")\n",
    "    else:\n",
    "        print(\"The p value of\",i,\"is not releated with Target Variable\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "map_cols=['arrival_date_month' ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "le=LabelEncoder()\n",
    "Resortdata['arrival_date_month']=le.fit_transform(Resortdata['arrival_date_month'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>meal</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>previous_cancellations</th>\n",
       "      <th>previous_bookings_not_canceled</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>booking_changes</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>85</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   is_canceled  lead_time  arrival_date_month  stays_in_weekend_nights  \\\n",
       "0            0        342                   5                        0   \n",
       "1            0        737                   5                        0   \n",
       "2            0          7                   5                        0   \n",
       "3            0         13                   5                        0   \n",
       "4            0         14                   5                        0   \n",
       "5            0         14                   5                        0   \n",
       "6            0          0                   5                        0   \n",
       "7            0          9                   5                        0   \n",
       "8            1         85                   5                        0   \n",
       "9            1         75                   5                        0   \n",
       "\n",
       "   stays_in_week_nights  meal  market_segment  distribution_channel  \\\n",
       "0                     0     0               3                     1   \n",
       "1                     0     0               3                     1   \n",
       "2                     1     0               3                     1   \n",
       "3                     1     0               2                     0   \n",
       "4                     2     0               6                     3   \n",
       "5                     2     0               6                     3   \n",
       "6                     2     0               3                     1   \n",
       "7                     2     1               3                     1   \n",
       "8                     3     0               6                     3   \n",
       "9                     3     2               5                     3   \n",
       "\n",
       "   is_repeated_guest  previous_cancellations  previous_bookings_not_canceled  \\\n",
       "0                  0                       0                               0   \n",
       "1                  0                       0                               0   \n",
       "2                  0                       0                               0   \n",
       "3                  0                       0                               0   \n",
       "4                  0                       0                               0   \n",
       "5                  0                       0                               0   \n",
       "6                  0                       0                               0   \n",
       "7                  0                       0                               0   \n",
       "8                  0                       0                               0   \n",
       "9                  0                       0                               0   \n",
       "\n",
       "   reserved_room_type  assigned_room_type  booking_changes  deposit_type  \\\n",
       "0                   2                   2                3             0   \n",
       "1                   2                   2                4             0   \n",
       "2                   0                   2                0             0   \n",
       "3                   0                   0                0             0   \n",
       "4                   0                   0                0             0   \n",
       "5                   0                   0                0             0   \n",
       "6                   2                   2                0             0   \n",
       "7                   2                   2                0             0   \n",
       "8                   0                   0                0             0   \n",
       "9                   3                   3                0             0   \n",
       "\n",
       "   days_in_waiting_list  customer_type  required_car_parking_spaces  \\\n",
       "0                     0              2                            0   \n",
       "1                     0              2                            0   \n",
       "2                     0              2                            0   \n",
       "3                     0              2                            0   \n",
       "4                     0              2                            0   \n",
       "5                     0              2                            0   \n",
       "6                     0              2                            0   \n",
       "7                     0              2                            0   \n",
       "8                     0              2                            0   \n",
       "9                     0              2                            0   \n",
       "\n",
       "   total_of_special_requests  reservation_status  \n",
       "0                          0                   1  \n",
       "1                          0                   1  \n",
       "2                          0                   1  \n",
       "3                          0                   1  \n",
       "4                          1                   1  \n",
       "5                          1                   1  \n",
       "6                          0                   1  \n",
       "7                          1                   1  \n",
       "8                          1                   0  \n",
       "9                          0                   0  "
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x24f9fd5cbc8>"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## detecting outliers\n",
    "\n",
    "Resortdata.boxplot(column='days_in_waiting_list',by='booking_changes', figsize=(15,6))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "metadata": {},
   "outputs": [],
   "source": [
    "con1=Resortdata['booking_changes']==0\n",
    "con2=Resortdata['days_in_waiting_list']>=200\n",
    "Delete=Resortdata[con1&con2].index\n",
    "Resortdata=Resortdata.drop(Delete)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata_pkl=pd.to_pickle(Resortdata,'C:/Users/user/Desktop/IVY WORK BOOK/PYTHON/pickle files/Resortdata_pkl.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "Resortdata_ML=pd.read_pickle('C:/Users/user/Desktop/IVY WORK BOOK/PYTHON/pickle files/Resortdata_pkl.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['is_canceled', 'lead_time', 'arrival_date_month',\n",
       "       'stays_in_weekend_nights', 'stays_in_week_nights', 'meal',\n",
       "       'market_segment', 'distribution_channel', 'is_repeated_guest',\n",
       "       'previous_cancellations', 'previous_bookings_not_canceled',\n",
       "       'reserved_room_type', 'assigned_room_type', 'booking_changes',\n",
       "       'deposit_type', 'days_in_waiting_list', 'customer_type',\n",
       "       'required_car_parking_spaces', 'total_of_special_requests',\n",
       "       'reservation_status'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Resortdata.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "Predictor=['is_canceled', 'lead_time', 'arrival_date_month','stays_in_weekend_nights', 'stays_in_week_nights', 'meal','market_segment', \n",
    "           'distribution_channel', 'is_repeated_guest','previous_cancellations', 'previous_bookings_not_canceled',\n",
    "          'reserved_room_type', 'assigned_room_type', 'booking_changes','deposit_type', 'days_in_waiting_list', \n",
    "           'customer_type','required_car_parking_spaces', 'total_of_special_requests']\n",
    "\n",
    "Target=['reservation_status']\n",
    "\n",
    "\n",
    "\n",
    "X=Resortdata_ML[Predictor].values\n",
    "y=Resortdata_ML[Target].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Logistic_Regression(Data1,Data2):\n",
    "    from sklearn.linear_model import LogisticRegression\n",
    "    Test_size=[0.30,0.20,0.23,0.26,0.33,0.36,0.42,0.45]\n",
    "    Random_state=[521457,50,32578,5,2567,4789,8547,657]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            lgf=LogisticRegression(C=2,penalty='l2', solver='liblinear')\n",
    "            predictModel=lgf.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy)   \n",
    "                                         "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.38      0.02      0.03       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.78      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[13016     0    10]\n",
      " [    0 22362     0]\n",
      " [  341     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12862\n",
      "           1       1.00      1.00      1.00     22516\n",
      "           2       0.44      0.01      0.02       357\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.81      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12857     0     5]\n",
      " [    0 22516     0]\n",
      " [  353     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.46      0.02      0.03       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.81      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12817     0     7]\n",
      " [    0 22552     0]\n",
      " [  353     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.35      0.02      0.04       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.77      0.67      0.68     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12963     0    13]\n",
      " [    0 22416     0]\n",
      " [  336     0     7]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.32      0.02      0.03       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.76      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12900     0    13]\n",
      " [    0 22483     0]\n",
      " [  333     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.33      0.01      0.03       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.77      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12889     0    10]\n",
      " [    0 22470     0]\n",
      " [  361     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.46      0.02      0.03       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.81      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12795     0     7]\n",
      " [    0 22571     0]\n",
      " [  356     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.36      0.01      0.03       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.78      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12824     0     9]\n",
      " [    0 22525     0]\n",
      " [  372     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8686\n",
      "           1       1.00      1.00      1.00     14919\n",
      "           2       0.20      0.01      0.02       219\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.73      0.67      0.67     23824\n",
      "weighted avg       0.98      0.99      0.99     23824\n",
      "\n",
      "[[ 8678     0     8]\n",
      " [    0 14919     0]\n",
      " [  217     0     2]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8585\n",
      "           1       1.00      1.00      1.00     14994\n",
      "           2       0.45      0.02      0.04       245\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.81      0.67      0.67     23824\n",
      "weighted avg       0.98      0.99      0.99     23824\n",
      "\n",
      "[[ 8579     0     6]\n",
      " [    0 14994     0]\n",
      " [  240     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      8502\n",
      "           1       1.00      1.00      1.00     15056\n",
      "           2       0.55      0.02      0.04       266\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.84      0.67      0.68     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8497     0     5]\n",
      " [    0 15056     0]\n",
      " [  260     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8702\n",
      "           1       1.00      1.00      1.00     14903\n",
      "           2       0.36      0.02      0.03       219\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.78      0.67      0.67     23824\n",
      "weighted avg       0.99      0.99      0.99     23824\n",
      "\n",
      "[[ 8695     0     7]\n",
      " [    0 14903     0]\n",
      " [  215     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8620\n",
      "           1       1.00      1.00      1.00     14981\n",
      "           2       0.21      0.01      0.03       223\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.73      0.67      0.67     23824\n",
      "weighted avg       0.98      0.99      0.99     23824\n",
      "\n",
      "[[ 8609     0    11]\n",
      " [    0 14981     0]\n",
      " [  220     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8514\n",
      "           1       1.00      1.00      1.00     15062\n",
      "           2       0.30      0.01      0.02       248\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.76      0.67      0.67     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8507     0     7]\n",
      " [    0 15062     0]\n",
      " [  245     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8531\n",
      "           1       1.00      1.00      1.00     15036\n",
      "           2       0.50      0.01      0.02       257\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.82      0.67      0.67     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8528     0     3]\n",
      " [    0 15036     0]\n",
      " [  254     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 657\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8573\n",
      "           1       1.00      1.00      1.00     14998\n",
      "           2       0.27      0.01      0.02       253\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.75      0.67      0.67     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8565     0     8]\n",
      " [    0 14998     0]\n",
      " [  250     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9973\n",
      "           1       1.00      1.00      1.00     17162\n",
      "           2       0.31      0.02      0.03       262\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.76      0.67      0.67     27397\n",
      "weighted avg       0.98      0.99      0.99     27397\n",
      "\n",
      "[[ 9964     0     9]\n",
      " [    0 17162     0]\n",
      " [  258     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9885\n",
      "           1       1.00      1.00      1.00     17229\n",
      "           2       0.50      0.02      0.03       283\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.82      0.67      0.67     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9880     0     5]\n",
      " [    0 17229     0]\n",
      " [  278     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9822\n",
      "           1       1.00      1.00      1.00     17286\n",
      "           2       0.55      0.02      0.04       289\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.84      0.67      0.68     27397\n",
      "weighted avg       0.99      0.99      0.98     27397\n",
      "\n",
      "[[ 9817     0     5]\n",
      " [    0 17286     0]\n",
      " [  283     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9976\n",
      "           1       1.00      1.00      1.00     17167\n",
      "           2       0.36      0.02      0.03       254\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.78      0.67      0.67     27397\n",
      "weighted avg       0.99      0.99      0.99     27397\n",
      "\n",
      "[[ 9969     0     7]\n",
      " [    0 17167     0]\n",
      " [  250     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9914\n",
      "           1       1.00      1.00      1.00     17229\n",
      "           2       0.29      0.02      0.04       254\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.76      0.67      0.67     27397\n",
      "weighted avg       0.98      0.99      0.99     27397\n",
      "\n",
      "[[ 9902     0    12]\n",
      " [    0 17229     0]\n",
      " [  249     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9867\n",
      "           1       1.00      1.00      1.00     17252\n",
      "           2       0.33      0.01      0.03       278\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.77      0.67      0.67     27397\n",
      "weighted avg       0.98      0.99      0.99     27397\n",
      "\n",
      "[[ 9859     0     8]\n",
      " [    0 17252     0]\n",
      " [  274     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9791\n",
      "           1       1.00      1.00      1.00     17318\n",
      "           2       0.50      0.01      0.03       288\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.82      0.67      0.67     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9787     0     4]\n",
      " [    0 17318     0]\n",
      " [  284     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9868\n",
      "           1       1.00      1.00      1.00     17236\n",
      "           2       0.33      0.01      0.03       293\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.77      0.67      0.67     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9860     0     8]\n",
      " [    0 17236     0]\n",
      " [  289     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11288\n",
      "           1       1.00      1.00      1.00     19386\n",
      "           2       0.38      0.02      0.04       297\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.78      0.67      0.68     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11278     0    10]\n",
      " [    0 19386     0]\n",
      " [  291     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11153\n",
      "           1       1.00      1.00      1.00     19499\n",
      "           2       0.44      0.01      0.02       319\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.81      0.67      0.67     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11148     0     5]\n",
      " [    0 19499     0]\n",
      " [  315     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11101\n",
      "           1       1.00      1.00      1.00     19555\n",
      "           2       0.55      0.02      0.04       315\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.84      0.67      0.67     30971\n",
      "weighted avg       0.99      0.99      0.99     30971\n",
      "\n",
      "[[11096     0     5]\n",
      " [    0 19555     0]\n",
      " [  309     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11236\n",
      "           1       1.00      1.00      1.00     19438\n",
      "           2       0.38      0.02      0.03       297\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.79      0.67      0.67     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11228     0     8]\n",
      " [    0 19438     0]\n",
      " [  292     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     11227\n",
      "           1       1.00      1.00      1.00     19452\n",
      "           2       0.29      0.02      0.03       292\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.76      0.67      0.67     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11215     0    12]\n",
      " [    0 19452     0]\n",
      " [  287     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11174\n",
      "           1       1.00      1.00      1.00     19485\n",
      "           2       0.38      0.02      0.03       312\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.79      0.67      0.67     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11166     0     8]\n",
      " [    0 19485     0]\n",
      " [  307     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11104\n",
      "           1       1.00      1.00      1.00     19551\n",
      "           2       0.56      0.02      0.03       316\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.84      0.67      0.67     30971\n",
      "weighted avg       0.99      0.99      0.99     30971\n",
      "\n",
      "[[11100     0     4]\n",
      " [    0 19551     0]\n",
      " [  311     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11100\n",
      "           1       1.00      1.00      1.00     19548\n",
      "           2       0.33      0.01      0.02       323\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.77      0.67      0.67     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11092     0     8]\n",
      " [    0 19548     0]\n",
      " [  319     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14277\n",
      "           1       1.00      1.00      1.00     24653\n",
      "           2       0.38      0.02      0.03       379\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.78      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14267     0    10]\n",
      " [    0 24653     0]\n",
      " [  373     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14177\n",
      "           1       1.00      1.00      1.00     24745\n",
      "           2       0.40      0.01      0.02       387\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.79      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14171     0     6]\n",
      " [    0 24745     0]\n",
      " [  383     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14087\n",
      "           1       1.00      1.00      1.00     24827\n",
      "           2       0.53      0.02      0.04       395\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.84      0.67      0.68     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14080     0     7]\n",
      " [    0 24827     0]\n",
      " [  387     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14258\n",
      "           1       1.00      1.00      1.00     24676\n",
      "           2       0.39      0.02      0.05       375\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.79      0.67      0.68     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14244     0    14]\n",
      " [    0 24676     0]\n",
      " [  366     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14185\n",
      "           1       1.00      1.00      1.00     24754\n",
      "           2       0.30      0.02      0.03       370\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.76      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14171     0    14]\n",
      " [    0 24754     0]\n",
      " [  364     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14193\n",
      "           1       1.00      1.00      1.00     24713\n",
      "           2       0.36      0.01      0.02       403\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.78      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14184     0     9]\n",
      " [    0 24713     0]\n",
      " [  398     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14086\n",
      "           1       1.00      1.00      1.00     24822\n",
      "           2       0.44      0.02      0.04       401\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.81      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14076     0    10]\n",
      " [    0 24822     0]\n",
      " [  393     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14154\n",
      "           1       1.00      1.00      1.00     24742\n",
      "           2       0.38      0.01      0.03       413\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.78      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14144     0    10]\n",
      " [    0 24742     0]\n",
      " [  407     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15583\n",
      "           1       1.00      1.00      1.00     26888\n",
      "           2       0.44      0.02      0.04       411\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.81      0.67      0.67     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15573     0    10]\n",
      " [    0 26888     0]\n",
      " [  403     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27018\n",
      "           2       0.33      0.01      0.02       427\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.77      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15429     0     8]\n",
      " [    0 27018     0]\n",
      " [  423     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15380\n",
      "           1       1.00      1.00      1.00     27073\n",
      "           2       0.50      0.02      0.04       429\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.82      0.67      0.68     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15371     0     9]\n",
      " [    0 27073     0]\n",
      " [  420     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15574\n",
      "           1       1.00      1.00      1.00     26899\n",
      "           2       0.43      0.02      0.05       409\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.80      0.67      0.68     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15561     0    13]\n",
      " [    0 26899     0]\n",
      " [  399     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15442\n",
      "           1       1.00      1.00      1.00     27033\n",
      "           2       0.30      0.02      0.03       407\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.76      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15426     0    16]\n",
      " [    0 27033     0]\n",
      " [  400     0     7]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 4789\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15496\n",
      "           1       1.00      1.00      1.00     26946\n",
      "           2       0.36      0.01      0.02       440\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.78      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15487     0     9]\n",
      " [    0 26946     0]\n",
      " [  435     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15438\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.44      0.02      0.03       442\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.81      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15428     0    10]\n",
      " [    0 27002     0]\n",
      " [  434     0     8]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.38      0.01      0.03       443\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.78      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15427     0    10]\n",
      " [    0 27002     0]\n",
      " [  437     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18111\n",
      "           1       1.00      1.00      1.00     31424\n",
      "           2       0.42      0.02      0.04       494\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.80      0.67      0.68     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18097     0    14]\n",
      " [    0 31424     0]\n",
      " [  484     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18030\n",
      "           1       1.00      1.00      1.00     31502\n",
      "           2       0.36      0.01      0.02       497\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.78      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18021     0     9]\n",
      " [    0 31502     0]\n",
      " [  492     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17939\n",
      "           1       1.00      1.00      1.00     31592\n",
      "           2       0.42      0.02      0.04       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.80      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[17925     0    14]\n",
      " [    0 31592     0]\n",
      " [  488     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18150\n",
      "           1       1.00      1.00      1.00     31396\n",
      "           2       0.46      0.02      0.05       483\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.81      0.67      0.68     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[18136     0    14]\n",
      " [    0 31396     0]\n",
      " [  471     0    12]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18028\n",
      "           1       1.00      1.00      1.00     31523\n",
      "           2       0.33      0.02      0.04       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.77      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18010     0    18]\n",
      " [    0 31523     0]\n",
      " [  469     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18004\n",
      "           1       1.00      1.00      1.00     31527\n",
      "           2       0.35      0.01      0.02       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.78      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[17993     0    11]\n",
      " [    0 31527     0]\n",
      " [  492     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18042\n",
      "           1       1.00      1.00      1.00     31470\n",
      "           2       0.48      0.02      0.04       517\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.82      0.67      0.68     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18030     0    12]\n",
      " [    0 31470     0]\n",
      " [  506     0    11]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18059\n",
      "           1       1.00      1.00      1.00     31458\n",
      "           2       0.43      0.02      0.04       512\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.80      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18046     0    13]\n",
      " [    0 31458     0]\n",
      " [  502     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19359\n",
      "           1       1.00      1.00      1.00     33707\n",
      "           2       0.40      0.02      0.04       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.79      0.67      0.67     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19344     0    15]\n",
      " [    0 33707     0]\n",
      " [  527     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19299\n",
      "           1       1.00      1.00      1.00     33767\n",
      "           2       0.40      0.01      0.02       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.79      0.67      0.67     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19290     0     9]\n",
      " [    0 33767     0]\n",
      " [  531     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19178\n",
      "           1       1.00      1.00      1.00     33890\n",
      "           2       0.38      0.02      0.04       535\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.79      0.67      0.67     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19162     0    16]\n",
      " [    0 33890     0]\n",
      " [  525     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19447\n",
      "           1       1.00      1.00      1.00     33629\n",
      "           2       0.32      0.02      0.03       527\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.77      0.67      0.67     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19428     0    19]\n",
      " [    0 33629     0]\n",
      " [  518     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 2567\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19280\n",
      "           1       1.00      1.00      1.00     33810\n",
      "           2       0.38      0.02      0.04       513\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.78      0.67      0.68     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19262     0    18]\n",
      " [    0 33810     0]\n",
      " [  502     0    11]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19294\n",
      "           1       1.00      1.00      1.00     33773\n",
      "           2       0.39      0.01      0.03       536\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.79      0.67      0.67     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19283     0    11]\n",
      " [    0 33773     0]\n",
      " [  529     0     7]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19309\n",
      "           1       1.00      1.00      1.00     33740\n",
      "           2       0.48      0.02      0.04       554\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.82      0.67      0.68     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19296     0    13]\n",
      " [    0 33740     0]\n",
      " [  542     0    12]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19379\n",
      "           1       1.00      1.00      1.00     33674\n",
      "           2       0.48      0.02      0.04       550\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.82      0.67      0.68     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19366     0    13]\n",
      " [    0 33674     0]\n",
      " [  538     0    12]]\n",
      "Accuracy is  0.99\n",
      "The Average of All acuracies 0.9870312500000002\n"
     ]
    }
   ],
   "source": [
    "length,AVGAccuracy=Logistic_Regression(X,y)\n",
    "Sum_of_Acc=sum(AVGAccuracy)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc/length))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Decision_Tree_classification(Data1,Data2):\n",
    "    Test_size=[0.30,0.20,0.23,0.26,0.33,0.36,0.42,0.45]\n",
    "    Random_state=[521457,50,32578,5,2567,4789,8547,657]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            dtree=tree.DecisionTreeClassifier(max_depth=3,criterion='entropy')\n",
    "            predictModeltree=dtree.fit(X_train,y_train)\n",
    "            predictions=predictModeltree.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy,predictModeltree)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.00      0.00      0.00       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[13026     0     0]\n",
      " [    0 22362     0]\n",
      " [  347     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12862\n",
      "           1       1.00      1.00      1.00     22516\n",
      "           2       0.00      0.00      0.00       357\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12862     0     0]\n",
      " [    0 22516     0]\n",
      " [  357     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.00      0.00      0.00       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12824     0     0]\n",
      " [    0 22552     0]\n",
      " [  359     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.00      0.00      0.00       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12976     0     0]\n",
      " [    0 22416     0]\n",
      " [  343     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.00      0.00      0.00       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12913     0     0]\n",
      " [    0 22483     0]\n",
      " [  339     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.00      0.00      0.00       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12899     0     0]\n",
      " [    0 22470     0]\n",
      " [  366     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.00      0.00      0.00       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12802     0     0]\n",
      " [    0 22571     0]\n",
      " [  362     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.00      0.00      0.00       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12833     0     0]\n",
      " [    0 22525     0]\n",
      " [  377     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8686\n",
      "           1       1.00      1.00      1.00     14919\n",
      "           2       0.00      0.00      0.00       219\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.99     23824\n",
      "\n",
      "[[ 8686     0     0]\n",
      " [    0 14919     0]\n",
      " [  219     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8585\n",
      "           1       1.00      1.00      1.00     14994\n",
      "           2       0.00      0.00      0.00       245\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8585     0     0]\n",
      " [    0 14994     0]\n",
      " [  245     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      8502\n",
      "           1       1.00      1.00      1.00     15056\n",
      "           2       0.00      0.00      0.00       266\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8502     0     0]\n",
      " [    0 15056     0]\n",
      " [  266     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8702\n",
      "           1       1.00      1.00      1.00     14903\n",
      "           2       0.00      0.00      0.00       219\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.99     23824\n",
      "\n",
      "[[ 8702     0     0]\n",
      " [    0 14903     0]\n",
      " [  219     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8620\n",
      "           1       1.00      1.00      1.00     14981\n",
      "           2       0.00      0.00      0.00       223\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.99     23824\n",
      "\n",
      "[[ 8620     0     0]\n",
      " [    0 14981     0]\n",
      " [  223     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8514\n",
      "           1       1.00      1.00      1.00     15062\n",
      "           2       0.00      0.00      0.00       248\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8514     0     0]\n",
      " [    0 15062     0]\n",
      " [  248     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8531\n",
      "           1       1.00      1.00      1.00     15036\n",
      "           2       0.00      0.00      0.00       257\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8531     0     0]\n",
      " [    0 15036     0]\n",
      " [  257     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.2 and random state is 657\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8573\n",
      "           1       1.00      1.00      1.00     14998\n",
      "           2       0.00      0.00      0.00       253\n",
      "\n",
      "    accuracy                           0.99     23824\n",
      "   macro avg       0.66      0.67      0.66     23824\n",
      "weighted avg       0.98      0.99      0.98     23824\n",
      "\n",
      "[[ 8573     0     0]\n",
      " [    0 14998     0]\n",
      " [  253     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9973\n",
      "           1       1.00      1.00      1.00     17162\n",
      "           2       0.00      0.00      0.00       262\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.99     27397\n",
      "\n",
      "[[ 9973     0     0]\n",
      " [    0 17162     0]\n",
      " [  262     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9885\n",
      "           1       1.00      1.00      1.00     17229\n",
      "           2       0.00      0.00      0.00       283\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9885     0     0]\n",
      " [    0 17229     0]\n",
      " [  283     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9822\n",
      "           1       1.00      1.00      1.00     17286\n",
      "           2       0.00      0.00      0.00       289\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9822     0     0]\n",
      " [    0 17286     0]\n",
      " [  289     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9976\n",
      "           1       1.00      1.00      1.00     17167\n",
      "           2       0.00      0.00      0.00       254\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.99     27397\n",
      "\n",
      "[[ 9976     0     0]\n",
      " [    0 17167     0]\n",
      " [  254     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9914\n",
      "           1       1.00      1.00      1.00     17229\n",
      "           2       0.00      0.00      0.00       254\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.99     27397\n",
      "\n",
      "[[ 9914     0     0]\n",
      " [    0 17229     0]\n",
      " [  254     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9867\n",
      "           1       1.00      1.00      1.00     17252\n",
      "           2       0.00      0.00      0.00       278\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9867     0     0]\n",
      " [    0 17252     0]\n",
      " [  278     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9791\n",
      "           1       1.00      1.00      1.00     17318\n",
      "           2       0.00      0.00      0.00       288\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9791     0     0]\n",
      " [    0 17318     0]\n",
      " [  288     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.23 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9868\n",
      "           1       1.00      1.00      1.00     17236\n",
      "           2       0.00      0.00      0.00       293\n",
      "\n",
      "    accuracy                           0.99     27397\n",
      "   macro avg       0.66      0.67      0.66     27397\n",
      "weighted avg       0.98      0.99      0.98     27397\n",
      "\n",
      "[[ 9868     0     0]\n",
      " [    0 17236     0]\n",
      " [  293     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11288\n",
      "           1       1.00      1.00      1.00     19386\n",
      "           2       0.00      0.00      0.00       297\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11288     0     0]\n",
      " [    0 19386     0]\n",
      " [  297     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11153\n",
      "           1       1.00      1.00      1.00     19499\n",
      "           2       0.00      0.00      0.00       319\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11153     0     0]\n",
      " [    0 19499     0]\n",
      " [  319     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11101\n",
      "           1       1.00      1.00      1.00     19555\n",
      "           2       0.00      0.00      0.00       315\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11101     0     0]\n",
      " [    0 19555     0]\n",
      " [  315     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11236\n",
      "           1       1.00      1.00      1.00     19438\n",
      "           2       0.00      0.00      0.00       297\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11236     0     0]\n",
      " [    0 19438     0]\n",
      " [  297     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11227\n",
      "           1       1.00      1.00      1.00     19452\n",
      "           2       0.00      0.00      0.00       292\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11227     0     0]\n",
      " [    0 19452     0]\n",
      " [  292     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11174\n",
      "           1       1.00      1.00      1.00     19485\n",
      "           2       0.00      0.00      0.00       312\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11174     0     0]\n",
      " [    0 19485     0]\n",
      " [  312     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11104\n",
      "           1       1.00      1.00      1.00     19551\n",
      "           2       0.00      0.00      0.00       316\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11104     0     0]\n",
      " [    0 19551     0]\n",
      " [  316     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11100\n",
      "           1       1.00      1.00      1.00     19548\n",
      "           2       0.00      0.00      0.00       323\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11100     0     0]\n",
      " [    0 19548     0]\n",
      " [  323     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14277\n",
      "           1       1.00      1.00      1.00     24653\n",
      "           2       0.00      0.00      0.00       379\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14277     0     0]\n",
      " [    0 24653     0]\n",
      " [  379     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14177\n",
      "           1       1.00      1.00      1.00     24745\n",
      "           2       0.00      0.00      0.00       387\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14177     0     0]\n",
      " [    0 24745     0]\n",
      " [  387     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14087\n",
      "           1       1.00      1.00      1.00     24827\n",
      "           2       0.00      0.00      0.00       395\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14087     0     0]\n",
      " [    0 24827     0]\n",
      " [  395     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14258\n",
      "           1       1.00      1.00      1.00     24676\n",
      "           2       0.00      0.00      0.00       375\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14258     0     0]\n",
      " [    0 24676     0]\n",
      " [  375     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14185\n",
      "           1       1.00      1.00      1.00     24754\n",
      "           2       0.00      0.00      0.00       370\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14185     0     0]\n",
      " [    0 24754     0]\n",
      " [  370     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14193\n",
      "           1       1.00      1.00      1.00     24713\n",
      "           2       0.00      0.00      0.00       403\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14193     0     0]\n",
      " [    0 24713     0]\n",
      " [  403     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14086\n",
      "           1       1.00      1.00      1.00     24822\n",
      "           2       0.00      0.00      0.00       401\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14086     0     0]\n",
      " [    0 24822     0]\n",
      " [  401     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14154\n",
      "           1       1.00      1.00      1.00     24742\n",
      "           2       0.00      0.00      0.00       413\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14154     0     0]\n",
      " [    0 24742     0]\n",
      " [  413     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15583\n",
      "           1       1.00      1.00      1.00     26888\n",
      "           2       0.00      0.00      0.00       411\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15583     0     0]\n",
      " [    0 26888     0]\n",
      " [  411     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27018\n",
      "           2       0.00      0.00      0.00       427\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15437     0     0]\n",
      " [    0 27018     0]\n",
      " [  427     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15380\n",
      "           1       1.00      1.00      1.00     27073\n",
      "           2       0.00      0.00      0.00       429\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15380     0     0]\n",
      " [    0 27073     0]\n",
      " [  429     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15574\n",
      "           1       1.00      1.00      1.00     26899\n",
      "           2       0.00      0.00      0.00       409\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15574     0     0]\n",
      " [    0 26899     0]\n",
      " [  409     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15442\n",
      "           1       1.00      1.00      1.00     27033\n",
      "           2       0.00      0.00      0.00       407\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15442     0     0]\n",
      " [    0 27033     0]\n",
      " [  407     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 4789\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15496\n",
      "           1       1.00      1.00      1.00     26946\n",
      "           2       0.00      0.00      0.00       440\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15496     0     0]\n",
      " [    0 26946     0]\n",
      " [  440     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15438\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.00      0.00      0.00       442\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15438     0     0]\n",
      " [    0 27002     0]\n",
      " [  442     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.00      0.00      0.00       443\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15437     0     0]\n",
      " [    0 27002     0]\n",
      " [  443     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18111\n",
      "           1       1.00      1.00      1.00     31424\n",
      "           2       0.00      0.00      0.00       494\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18111     0     0]\n",
      " [    0 31424     0]\n",
      " [  494     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18030\n",
      "           1       1.00      1.00      1.00     31502\n",
      "           2       0.00      0.00      0.00       497\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18030     0     0]\n",
      " [    0 31502     0]\n",
      " [  497     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17939\n",
      "           1       1.00      1.00      1.00     31592\n",
      "           2       0.00      0.00      0.00       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[17939     0     0]\n",
      " [    0 31592     0]\n",
      " [  498     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18150\n",
      "           1       1.00      1.00      1.00     31396\n",
      "           2       0.00      0.00      0.00       483\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18150     0     0]\n",
      " [    0 31396     0]\n",
      " [  483     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18028\n",
      "           1       1.00      1.00      1.00     31523\n",
      "           2       0.00      0.00      0.00       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18028     0     0]\n",
      " [    0 31523     0]\n",
      " [  478     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18004\n",
      "           1       1.00      1.00      1.00     31527\n",
      "           2       0.00      0.00      0.00       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18004     0     0]\n",
      " [    0 31527     0]\n",
      " [  498     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18042\n",
      "           1       1.00      1.00      1.00     31470\n",
      "           2       0.00      0.00      0.00       517\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18042     0     0]\n",
      " [    0 31470     0]\n",
      " [  517     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18059\n",
      "           1       1.00      1.00      1.00     31458\n",
      "           2       0.00      0.00      0.00       512\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18059     0     0]\n",
      " [    0 31458     0]\n",
      " [  512     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19359\n",
      "           1       1.00      1.00      1.00     33707\n",
      "           2       0.00      0.00      0.00       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19359     0     0]\n",
      " [    0 33707     0]\n",
      " [  537     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 50\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19299\n",
      "           1       1.00      1.00      1.00     33767\n",
      "           2       0.00      0.00      0.00       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19299     0     0]\n",
      " [    0 33767     0]\n",
      " [  537     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19178\n",
      "           1       1.00      1.00      1.00     33890\n",
      "           2       0.00      0.00      0.00       535\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19178     0     0]\n",
      " [    0 33890     0]\n",
      " [  535     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19447\n",
      "           1       1.00      1.00      1.00     33629\n",
      "           2       0.00      0.00      0.00       527\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19447     0     0]\n",
      " [    0 33629     0]\n",
      " [  527     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 2567\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19280\n",
      "           1       1.00      1.00      1.00     33810\n",
      "           2       0.00      0.00      0.00       513\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19280     0     0]\n",
      " [    0 33810     0]\n",
      " [  513     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19294\n",
      "           1       1.00      1.00      1.00     33773\n",
      "           2       0.00      0.00      0.00       536\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19294     0     0]\n",
      " [    0 33773     0]\n",
      " [  536     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19309\n",
      "           1       1.00      1.00      1.00     33740\n",
      "           2       0.00      0.00      0.00       554\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19309     0     0]\n",
      " [    0 33740     0]\n",
      " [  554     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19379\n",
      "           1       1.00      1.00      1.00     33674\n",
      "           2       0.00      0.00      0.00       550\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19379     0     0]\n",
      " [    0 33674     0]\n",
      " [  550     0     0]]\n",
      "Accuracy is  0.98\n",
      "The Average of All acuracies 0.9854687500000001\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x24fafbf8d08>"
      ]
     },
     "execution_count": 221,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "length,AVGAccuracy,predictModeltree=Decision_Tree_classification(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AVGAccuracy)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))\n",
    "feautreimportance=pd.Series(predictModeltree.feature_importances_, index=Predictor)\n",
    "feautreimportance.nlargest(10).plot(kind='bar')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def RandomForest_classifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.26,0.33,0.36,0.42,0.45,0.31,0.27]\n",
    "    Random_state=[521457,7505,32578,5,2567,4789,8547,657,75879,45201]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            RFC =RandomForestClassifier(max_depth=3, n_estimators=300,criterion='entropy')\n",
    "            predictModel=RFC.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy, RFC) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.00      0.00      0.00       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[13026     0     0]\n",
      " [    0 22362     0]\n",
      " [  347     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12876\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.00      0.00      0.00       334\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12876     0     0]\n",
      " [    0 22525     0]\n",
      " [  334     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.00      0.00      0.00       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12824     0     0]\n",
      " [    0 22552     0]\n",
      " [  359     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.00      0.00      0.00       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12976     0     0]\n",
      " [    0 22416     0]\n",
      " [  343     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.00      0.00      0.00       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12913     0     0]\n",
      " [    0 22483     0]\n",
      " [  339     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.00      0.00      0.00       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12899     0     0]\n",
      " [    0 22470     0]\n",
      " [  366     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.00      0.00      0.00       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12802     0     0]\n",
      " [    0 22571     0]\n",
      " [  362     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.00      0.00      0.00       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12833     0     0]\n",
      " [    0 22525     0]\n",
      " [  377     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12731\n",
      "           1       1.00      1.00      1.00     22620\n",
      "           2       0.00      0.00      0.00       384\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12731     0     0]\n",
      " [    0 22620     0]\n",
      " [  384     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12869\n",
      "           1       1.00      1.00      1.00     22491\n",
      "           2       0.00      0.00      0.00       375\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12869     0     0]\n",
      " [    0 22491     0]\n",
      " [  375     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10840\n",
      "           1       1.00      1.00      1.00     18653\n",
      "           2       0.00      0.00      0.00       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10840     0     0]\n",
      " [    0 18653     0]\n",
      " [  286     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10722\n",
      "           1       1.00      1.00      1.00     18771\n",
      "           2       0.00      0.00      0.00       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10722     0     0]\n",
      " [    0 18771     0]\n",
      " [  286     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10677\n",
      "           1       1.00      1.00      1.00     18795\n",
      "           2       0.00      0.00      0.00       307\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10677     0     0]\n",
      " [    0 18795     0]\n",
      " [  307     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10806\n",
      "           1       1.00      1.00      1.00     18691\n",
      "           2       0.00      0.00      0.00       282\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10806     0     0]\n",
      " [    0 18691     0]\n",
      " [  282     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10792\n",
      "           1       1.00      1.00      1.00     18710\n",
      "           2       0.00      0.00      0.00       277\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10792     0     0]\n",
      " [    0 18710     0]\n",
      " [  277     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 4789\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10728\n",
      "           1       1.00      1.00      1.00     18750\n",
      "           2       0.00      0.00      0.00       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10728     0     0]\n",
      " [    0 18750     0]\n",
      " [  301     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10685\n",
      "           1       1.00      1.00      1.00     18793\n",
      "           2       0.00      0.00      0.00       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10685     0     0]\n",
      " [    0 18793     0]\n",
      " [  301     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10698\n",
      "           1       1.00      1.00      1.00     18766\n",
      "           2       0.00      0.00      0.00       315\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10698     0     0]\n",
      " [    0 18766     0]\n",
      " [  315     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10630\n",
      "           1       1.00      1.00      1.00     18826\n",
      "           2       0.00      0.00      0.00       323\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10630     0     0]\n",
      " [    0 18826     0]\n",
      " [  323     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10774\n",
      "           1       1.00      1.00      1.00     18696\n",
      "           2       0.00      0.00      0.00       309\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.66      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10774     0     0]\n",
      " [    0 18696     0]\n",
      " [  309     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9119\n",
      "           1       1.00      1.00      1.00     15667\n",
      "           2       0.00      0.00      0.00       229\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.99     25015\n",
      "\n",
      "[[ 9117     2     0]\n",
      " [    0 15667     0]\n",
      " [  229     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8993\n",
      "           1       1.00      1.00      1.00     15776\n",
      "           2       0.00      0.00      0.00       246\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.99     25015\n",
      "\n",
      "[[ 8993     0     0]\n",
      " [    0 15776     0]\n",
      " [  246     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      8947\n",
      "           1       1.00      1.00      1.00     15791\n",
      "           2       0.00      0.00      0.00       277\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8947     0     0]\n",
      " [    0 15791     0]\n",
      " [  277     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9137\n",
      "           1       1.00      1.00      1.00     15648\n",
      "           2       0.00      0.00      0.00       230\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.99     25015\n",
      "\n",
      "[[ 9137     0     0]\n",
      " [    0 15648     0]\n",
      " [  230     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9058\n",
      "           1       1.00      1.00      1.00     15725\n",
      "           2       0.00      0.00      0.00       232\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.99     25015\n",
      "\n",
      "[[ 9058     0     0]\n",
      " [    0 15725     0]\n",
      " [  232     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8935\n",
      "           1       1.00      1.00      1.00     15825\n",
      "           2       0.00      0.00      0.00       255\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8935     0     0]\n",
      " [    0 15825     0]\n",
      " [  255     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8932\n",
      "           1       1.00      1.00      1.00     15818\n",
      "           2       0.00      0.00      0.00       265\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8932     0     0]\n",
      " [    0 15818     0]\n",
      " [  265     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9004\n",
      "           1       1.00      1.00      1.00     15750\n",
      "           2       0.00      0.00      0.00       261\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 9004     0     0]\n",
      " [    0 15750     0]\n",
      " [  261     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      8924\n",
      "           1       1.00      1.00      1.00     15814\n",
      "           2       0.00      0.00      0.00       277\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8924     0     0]\n",
      " [    0 15814     0]\n",
      " [  277     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9051\n",
      "           1       1.00      1.00      1.00     15710\n",
      "           2       0.00      0.00      0.00       254\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 9051     0     0]\n",
      " [    0 15710     0]\n",
      " [  254     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 521457\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11288\n",
      "           1       1.00      1.00      1.00     19386\n",
      "           2       0.00      0.00      0.00       297\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11288     0     0]\n",
      " [    0 19386     0]\n",
      " [  297     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11159\n",
      "           1       1.00      1.00      1.00     19517\n",
      "           2       0.00      0.00      0.00       295\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11159     0     0]\n",
      " [    0 19517     0]\n",
      " [  295     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11101\n",
      "           1       1.00      1.00      1.00     19555\n",
      "           2       0.00      0.00      0.00       315\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11101     0     0]\n",
      " [    0 19555     0]\n",
      " [  315     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11236\n",
      "           1       1.00      1.00      1.00     19438\n",
      "           2       0.00      0.00      0.00       297\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11236     0     0]\n",
      " [    0 19438     0]\n",
      " [  297     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11227\n",
      "           1       1.00      1.00      1.00     19452\n",
      "           2       0.00      0.00      0.00       292\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.99     30971\n",
      "\n",
      "[[11227     0     0]\n",
      " [    0 19452     0]\n",
      " [  292     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11174\n",
      "           1       1.00      1.00      1.00     19485\n",
      "           2       0.00      0.00      0.00       312\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11174     0     0]\n",
      " [    0 19485     0]\n",
      " [  312     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11104\n",
      "           1       1.00      1.00      1.00     19551\n",
      "           2       0.00      0.00      0.00       316\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11104     0     0]\n",
      " [    0 19551     0]\n",
      " [  316     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11100\n",
      "           1       1.00      1.00      1.00     19548\n",
      "           2       0.00      0.00      0.00       323\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11100     0     0]\n",
      " [    0 19548     0]\n",
      " [  323     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11058\n",
      "           1       1.00      1.00      1.00     19578\n",
      "           2       0.00      0.00      0.00       335\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11058     0     0]\n",
      " [    0 19578     0]\n",
      " [  335     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.26 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11212\n",
      "           1       1.00      1.00      1.00     19437\n",
      "           2       0.00      0.00      0.00       322\n",
      "\n",
      "    accuracy                           0.99     30971\n",
      "   macro avg       0.66      0.67      0.66     30971\n",
      "weighted avg       0.98      0.99      0.98     30971\n",
      "\n",
      "[[11212     0     0]\n",
      " [    0 19437     0]\n",
      " [  322     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14277\n",
      "           1       1.00      1.00      1.00     24653\n",
      "           2       0.00      0.00      0.00       379\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14277     0     0]\n",
      " [    0 24653     0]\n",
      " [  379     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14164\n",
      "           1       1.00      1.00      1.00     24777\n",
      "           2       0.00      0.00      0.00       368\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14164     0     0]\n",
      " [    0 24777     0]\n",
      " [  368     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14087\n",
      "           1       1.00      1.00      1.00     24827\n",
      "           2       0.00      0.00      0.00       395\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14087     0     0]\n",
      " [    0 24827     0]\n",
      " [  395     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14258\n",
      "           1       1.00      1.00      1.00     24676\n",
      "           2       0.00      0.00      0.00       375\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14258     0     0]\n",
      " [    0 24676     0]\n",
      " [  375     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14185\n",
      "           1       1.00      1.00      1.00     24754\n",
      "           2       0.00      0.00      0.00       370\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.99     39309\n",
      "\n",
      "[[14185     0     0]\n",
      " [    0 24754     0]\n",
      " [  370     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 4789\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14193\n",
      "           1       1.00      1.00      1.00     24713\n",
      "           2       0.00      0.00      0.00       403\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14193     0     0]\n",
      " [    0 24713     0]\n",
      " [  403     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14086\n",
      "           1       1.00      1.00      1.00     24822\n",
      "           2       0.00      0.00      0.00       401\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14086     0     0]\n",
      " [    0 24822     0]\n",
      " [  401     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14154\n",
      "           1       1.00      1.00      1.00     24742\n",
      "           2       0.00      0.00      0.00       413\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14154     0     0]\n",
      " [    0 24742     0]\n",
      " [  413     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     13994\n",
      "           1       1.00      1.00      1.00     24881\n",
      "           2       0.00      0.00      0.00       434\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[13994     0     0]\n",
      " [    0 24881     0]\n",
      " [  434     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14184\n",
      "           1       1.00      1.00      1.00     24711\n",
      "           2       0.00      0.00      0.00       414\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.66      0.67      0.66     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14184     0     0]\n",
      " [    0 24711     0]\n",
      " [  414     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15583\n",
      "           1       1.00      1.00      1.00     26888\n",
      "           2       0.00      0.00      0.00       411\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15583     0     0]\n",
      " [    0 26888     0]\n",
      " [  411     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15459\n",
      "           1       1.00      1.00      1.00     27027\n",
      "           2       0.00      0.00      0.00       396\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15459     0     0]\n",
      " [    0 27027     0]\n",
      " [  396     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15380\n",
      "           1       1.00      1.00      1.00     27073\n",
      "           2       0.00      0.00      0.00       429\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15380     0     0]\n",
      " [    0 27073     0]\n",
      " [  429     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15574\n",
      "           1       1.00      1.00      1.00     26899\n",
      "           2       0.00      0.00      0.00       409\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15574     0     0]\n",
      " [    0 26899     0]\n",
      " [  409     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15442\n",
      "           1       1.00      1.00      1.00     27033\n",
      "           2       0.00      0.00      0.00       407\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15442     0     0]\n",
      " [    0 27033     0]\n",
      " [  407     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15496\n",
      "           1       1.00      1.00      1.00     26946\n",
      "           2       0.00      0.00      0.00       440\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15496     0     0]\n",
      " [    0 26946     0]\n",
      " [  440     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15438\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.00      0.00      0.00       442\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15438     0     0]\n",
      " [    0 27002     0]\n",
      " [  442     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.00      0.00      0.00       443\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15437     0     0]\n",
      " [    0 27002     0]\n",
      " [  443     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     15249\n",
      "           1       1.00      1.00      1.00     27159\n",
      "           2       0.00      0.00      0.00       474\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15249     0     0]\n",
      " [    0 27159     0]\n",
      " [  474     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15521\n",
      "           1       1.00      1.00      1.00     26909\n",
      "           2       0.00      0.00      0.00       452\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.66      0.67      0.66     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15521     0     0]\n",
      " [    0 26909     0]\n",
      " [  452     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 521457\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18111\n",
      "           1       1.00      1.00      1.00     31424\n",
      "           2       0.00      0.00      0.00       494\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18111     0     0]\n",
      " [    0 31424     0]\n",
      " [  494     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17953\n",
      "           1       1.00      1.00      1.00     31598\n",
      "           2       0.00      0.00      0.00       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[17953     0     0]\n",
      " [    0 31598     0]\n",
      " [  478     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17939\n",
      "           1       1.00      1.00      1.00     31592\n",
      "           2       0.00      0.00      0.00       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[17939     0     0]\n",
      " [    0 31592     0]\n",
      " [  498     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18150\n",
      "           1       1.00      1.00      1.00     31396\n",
      "           2       0.00      0.00      0.00       483\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18150     0     0]\n",
      " [    0 31396     0]\n",
      " [  483     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18028\n",
      "           1       1.00      1.00      1.00     31523\n",
      "           2       0.00      0.00      0.00       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18028     0     0]\n",
      " [    0 31523     0]\n",
      " [  478     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18004\n",
      "           1       1.00      1.00      1.00     31527\n",
      "           2       0.00      0.00      0.00       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[18004     0     0]\n",
      " [    0 31527     0]\n",
      " [  498     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18042\n",
      "           1       1.00      1.00      1.00     31470\n",
      "           2       0.00      0.00      0.00       517\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18042     0     0]\n",
      " [    0 31470     0]\n",
      " [  517     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18059\n",
      "           1       1.00      1.00      1.00     31458\n",
      "           2       0.00      0.00      0.00       512\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18059     0     0]\n",
      " [    0 31458     0]\n",
      " [  512     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     17856\n",
      "           1       1.00      1.00      1.00     31626\n",
      "           2       0.00      0.00      0.00       547\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[17856     0     0]\n",
      " [    0 31626     0]\n",
      " [  547     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18008\n",
      "           1       1.00      1.00      1.00     31489\n",
      "           2       0.00      0.00      0.00       532\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.66      0.67      0.66     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18008     0     0]\n",
      " [    0 31489     0]\n",
      " [  532     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19359\n",
      "           1       1.00      1.00      1.00     33707\n",
      "           2       0.00      0.00      0.00       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19359     0     0]\n",
      " [    0 33707     0]\n",
      " [  537     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19231\n",
      "           1       1.00      1.00      1.00     33860\n",
      "           2       0.00      0.00      0.00       512\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19231     0     0]\n",
      " [    0 33860     0]\n",
      " [  512     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19178\n",
      "           1       1.00      1.00      1.00     33890\n",
      "           2       0.00      0.00      0.00       535\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19178     0     0]\n",
      " [    0 33890     0]\n",
      " [  535     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19447\n",
      "           1       1.00      1.00      1.00     33629\n",
      "           2       0.00      0.00      0.00       527\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19447     0     0]\n",
      " [    0 33629     0]\n",
      " [  527     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19280\n",
      "           1       1.00      1.00      1.00     33810\n",
      "           2       0.00      0.00      0.00       513\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19280     0     0]\n",
      " [    0 33810     0]\n",
      " [  513     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 4789\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19294\n",
      "           1       1.00      1.00      1.00     33773\n",
      "           2       0.00      0.00      0.00       536\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.99     53603\n",
      "\n",
      "[[19294     0     0]\n",
      " [    0 33773     0]\n",
      " [  536     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19309\n",
      "           1       1.00      1.00      1.00     33740\n",
      "           2       0.00      0.00      0.00       554\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19309     0     0]\n",
      " [    0 33740     0]\n",
      " [  554     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19379\n",
      "           1       1.00      1.00      1.00     33674\n",
      "           2       0.00      0.00      0.00       550\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19379     0     0]\n",
      " [    0 33674     0]\n",
      " [  550     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     19081\n",
      "           1       1.00      1.00      1.00     33940\n",
      "           2       0.00      0.00      0.00       582\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19081     0     0]\n",
      " [    0 33940     0]\n",
      " [  582     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19300\n",
      "           1       1.00      1.00      1.00     33740\n",
      "           2       0.00      0.00      0.00       563\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.66      0.67      0.66     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19300     0     0]\n",
      " [    0 33740     0]\n",
      " [  563     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13435\n",
      "           1       1.00      1.00      1.00     23137\n",
      "           2       0.00      0.00      0.00       354\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.99     36926\n",
      "\n",
      "[[13435     0     0]\n",
      " [    0 23137     0]\n",
      " [  354     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13313\n",
      "           1       1.00      1.00      1.00     23267\n",
      "           2       0.00      0.00      0.00       346\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.99     36926\n",
      "\n",
      "[[13312     1     0]\n",
      " [    0 23267     0]\n",
      " [  346     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13278\n",
      "           1       1.00      1.00      1.00     23280\n",
      "           2       0.00      0.00      0.00       368\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.99     36926\n",
      "\n",
      "[[13278     0     0]\n",
      " [    0 23280     0]\n",
      " [  368     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13414\n",
      "           1       1.00      1.00      1.00     23159\n",
      "           2       0.00      0.00      0.00       353\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.99     36926\n",
      "\n",
      "[[13414     0     0]\n",
      " [    0 23159     0]\n",
      " [  353     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13319\n",
      "           1       1.00      1.00      1.00     23255\n",
      "           2       0.00      0.00      0.00       352\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.99     36926\n",
      "\n",
      "[[13319     0     0]\n",
      " [    0 23255     0]\n",
      " [  352     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13340\n",
      "           1       1.00      1.00      1.00     23206\n",
      "           2       0.00      0.00      0.00       380\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.98     36926\n",
      "\n",
      "[[13340     0     0]\n",
      " [    0 23206     0]\n",
      " [  380     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13214\n",
      "           1       1.00      1.00      1.00     23337\n",
      "           2       0.00      0.00      0.00       375\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.98     36926\n",
      "\n",
      "[[13214     0     0]\n",
      " [    0 23337     0]\n",
      " [  375     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13262\n",
      "           1       1.00      1.00      1.00     23279\n",
      "           2       0.00      0.00      0.00       385\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.98     36926\n",
      "\n",
      "[[13257     5     0]\n",
      " [    0 23279     0]\n",
      " [  380     5     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     13139\n",
      "           1       1.00      1.00      1.00     23385\n",
      "           2       0.00      0.00      0.00       402\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.98     36926\n",
      "\n",
      "[[13139     0     0]\n",
      " [    0 23385     0]\n",
      " [  402     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.31 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13295\n",
      "           1       1.00      1.00      1.00     23240\n",
      "           2       0.00      0.00      0.00       391\n",
      "\n",
      "    accuracy                           0.99     36926\n",
      "   macro avg       0.66      0.67      0.66     36926\n",
      "weighted avg       0.98      0.99      0.98     36926\n",
      "\n",
      "[[13295     0     0]\n",
      " [    0 23240     0]\n",
      " [  391     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 521457\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11703\n",
      "           1       1.00      1.00      1.00     20146\n",
      "           2       0.00      0.00      0.00       313\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.99     32162\n",
      "\n",
      "[[11703     0     0]\n",
      " [    0 20146     0]\n",
      " [  313     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11596\n",
      "           1       1.00      1.00      1.00     20259\n",
      "           2       0.00      0.00      0.00       307\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.99     32162\n",
      "\n",
      "[[11596     0     0]\n",
      " [    0 20259     0]\n",
      " [  307     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11531\n",
      "           1       1.00      1.00      1.00     20303\n",
      "           2       0.00      0.00      0.00       328\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.98     32162\n",
      "\n",
      "[[11531     0     0]\n",
      " [    0 20303     0]\n",
      " [  328     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11677\n",
      "           1       1.00      1.00      1.00     20176\n",
      "           2       0.00      0.00      0.00       309\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.99     32162\n",
      "\n",
      "[[11677     0     0]\n",
      " [    0 20176     0]\n",
      " [  309     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11653\n",
      "           1       1.00      1.00      1.00     20205\n",
      "           2       0.00      0.00      0.00       304\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.99     32162\n",
      "\n",
      "[[11652     1     0]\n",
      " [    0 20205     0]\n",
      " [  304     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11604\n",
      "           1       1.00      1.00      1.00     20237\n",
      "           2       0.00      0.00      0.00       321\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.99     32162\n",
      "\n",
      "[[11604     0     0]\n",
      " [    0 20237     0]\n",
      " [  321     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11543\n",
      "           1       1.00      1.00      1.00     20290\n",
      "           2       0.00      0.00      0.00       329\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.98     32162\n",
      "\n",
      "[[11543     0     0]\n",
      " [    0 20290     0]\n",
      " [  329     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11549\n",
      "           1       1.00      1.00      1.00     20277\n",
      "           2       0.00      0.00      0.00       336\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.98     32162\n",
      "\n",
      "[[11549     0     0]\n",
      " [    0 20277     0]\n",
      " [  336     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 75879\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     11479\n",
      "           1       1.00      1.00      1.00     20329\n",
      "           2       0.00      0.00      0.00       354\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.98     32162\n",
      "\n",
      "[[11476     3     0]\n",
      " [    0 20329     0]\n",
      " [  349     5     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.27 and random state is 45201\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     11630\n",
      "           1       1.00      1.00      1.00     20198\n",
      "           2       0.00      0.00      0.00       334\n",
      "\n",
      "    accuracy                           0.99     32162\n",
      "   macro avg       0.66      0.67      0.66     32162\n",
      "weighted avg       0.98      0.99      0.98     32162\n",
      "\n",
      "[[11630     0     0]\n",
      " [    0 20198     0]\n",
      " [  334     0     0]]\n",
      "Accuracy is  0.98\n",
      "The Average of All acuracies 0.9847999999999996\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x23f3cb195c8>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "length,AVGAccuracy,RF=RandomForest_classifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AVGAccuracy)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))\n",
    "feautreimportance=pd.Series(RF.feature_importances_, index=Predictor)\n",
    "feautreimportance.nlargest(10).plot(kind='bar')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import AdaBoostClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Adaboost_Classifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.22,0.33,0.36,0.42,0.45,0.34]\n",
    "    Random_state=[521457,7505,32578,5,2567,4789,8547,657,42]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            DTC=DecisionTreeClassifier(max_depth=5)\n",
    "            ADA = AdaBoostClassifier(n_estimators=150, base_estimator=DTC ,learning_rate=0.01)\n",
    "            predictModel=ADA.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy,ADA ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.67      0.02      0.04       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.67      0.68     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[13022     0     4]\n",
      " [    0 22362     0]\n",
      " [  339     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12876\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.65      0.04      0.08       334\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.68      0.69     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12868     0     8]\n",
      " [    0 22525     0]\n",
      " [  319     0    15]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.69      0.03      0.06       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.68      0.68     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12819     0     5]\n",
      " [    0 22552     0]\n",
      " [  348     0    11]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.55      0.02      0.03       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.84      0.67      0.67     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12971     0     5]\n",
      " [    0 22416     0]\n",
      " [  337     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.78      0.02      0.04       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.92      0.67      0.68     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12911     0     2]\n",
      " [    0 22483     0]\n",
      " [  332     0     7]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.83      0.03      0.05       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.94      0.68      0.68     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12897     0     2]\n",
      " [    0 22470     0]\n",
      " [  356     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.42      0.01      0.03       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.80      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12795     0     7]\n",
      " [    0 22571     0]\n",
      " [  357     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.57      0.02      0.04       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.85      0.67      0.68     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12827     0     6]\n",
      " [    0 22525     0]\n",
      " [  369     0     8]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12906\n",
      "           1       1.00      1.00      1.00     22433\n",
      "           2       0.62      0.03      0.06       396\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.86      0.68      0.68     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12898     0     8]\n",
      " [    0 22433     0]\n",
      " [  383     0    13]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10840\n",
      "           1       1.00      1.00      1.00     18653\n",
      "           2       0.67      0.02      0.04       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.67      0.68     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10837     0     3]\n",
      " [    0 18653     0]\n",
      " [  280     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10722\n",
      "           1       1.00      1.00      1.00     18771\n",
      "           2       0.80      0.01      0.03       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.92      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10721     0     1]\n",
      " [    0 18771     0]\n",
      " [  282     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10677\n",
      "           1       1.00      1.00      1.00     18795\n",
      "           2       0.60      0.02      0.04       307\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.86      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10673     0     4]\n",
      " [    0 18795     0]\n",
      " [  301     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10806\n",
      "           1       1.00      1.00      1.00     18691\n",
      "           2       0.50      0.01      0.01       282\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.82      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10804     0     2]\n",
      " [    0 18691     0]\n",
      " [  280     0     2]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10792\n",
      "           1       1.00      1.00      1.00     18710\n",
      "           2       0.83      0.02      0.04       277\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.94      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10791     0     1]\n",
      " [    0 18710     0]\n",
      " [  272     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10728\n",
      "           1       1.00      1.00      1.00     18750\n",
      "           2       0.75      0.01      0.02       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.91      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10727     0     1]\n",
      " [    0 18750     0]\n",
      " [  298     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10685\n",
      "           1       1.00      1.00      1.00     18793\n",
      "           2       0.44      0.01      0.03       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.81      0.67      0.67     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10680     0     5]\n",
      " [    0 18793     0]\n",
      " [  297     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10698\n",
      "           1       1.00      1.00      1.00     18766\n",
      "           2       0.80      0.03      0.05       315\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.92      0.68      0.68     29779\n",
      "weighted avg       0.99      0.99      0.98     29779\n",
      "\n",
      "[[10696     0     2]\n",
      " [    0 18766     0]\n",
      " [  307     0     8]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10762\n",
      "           1       1.00      1.00      1.00     18682\n",
      "           2       0.90      0.03      0.05       335\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.96      0.68      0.68     29779\n",
      "weighted avg       0.99      0.99      0.98     29779\n",
      "\n",
      "[[10761     0     1]\n",
      " [    0 18682     0]\n",
      " [  326     0     9]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9119\n",
      "           1       1.00      1.00      1.00     15667\n",
      "           2       0.43      0.01      0.03       229\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.80      0.67      0.67     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9115     0     4]\n",
      " [    0 15667     0]\n",
      " [  226     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8993\n",
      "           1       1.00      1.00      1.00     15776\n",
      "           2       0.80      0.02      0.03       246\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.92      0.67      0.67     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8992     0     1]\n",
      " [    0 15776     0]\n",
      " [  242     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8947\n",
      "           1       1.00      1.00      1.00     15791\n",
      "           2       0.89      0.03      0.06       277\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.95      0.68      0.68     25015\n",
      "weighted avg       0.99      0.99      0.98     25015\n",
      "\n",
      "[[ 8946     0     1]\n",
      " [    0 15791     0]\n",
      " [  269     0     8]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9137\n",
      "           1       1.00      1.00      1.00     15648\n",
      "           2       1.00      0.01      0.03       230\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.99      0.67      0.67     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9137     0     0]\n",
      " [    0 15648     0]\n",
      " [  227     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9058\n",
      "           1       1.00      1.00      1.00     15725\n",
      "           2       0.89      0.03      0.07       232\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.95      0.68      0.68     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9057     0     1]\n",
      " [    0 15725     0]\n",
      " [  224     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8935\n",
      "           1       1.00      1.00      1.00     15825\n",
      "           2       0.75      0.02      0.05       255\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.91      0.67      0.68     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8933     0     2]\n",
      " [    0 15825     0]\n",
      " [  249     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8932\n",
      "           1       1.00      1.00      1.00     15818\n",
      "           2       0.44      0.02      0.03       265\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.81      0.67      0.67     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8927     0     5]\n",
      " [    0 15818     0]\n",
      " [  261     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9004\n",
      "           1       1.00      1.00      1.00     15750\n",
      "           2       0.25      0.00      0.01       261\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.74      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 9001     0     3]\n",
      " [    0 15750     0]\n",
      " [  260     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      9064\n",
      "           1       1.00      1.00      1.00     15669\n",
      "           2       0.71      0.02      0.03       282\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.89      0.67      0.67     25015\n",
      "weighted avg       0.99      0.99      0.98     25015\n",
      "\n",
      "[[ 9062     0     2]\n",
      " [    0 15669     0]\n",
      " [  277     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9557\n",
      "           1       1.00      1.00      1.00     16409\n",
      "           2       0.67      0.03      0.05       240\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.67      0.68     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9554     0     3]\n",
      " [    0 16409     0]\n",
      " [  234     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9430\n",
      "           1       1.00      1.00      1.00     16519\n",
      "           2       0.75      0.02      0.05       257\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.91      0.67      0.68     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9428     0     2]\n",
      " [    0 16519     0]\n",
      " [  251     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9383\n",
      "           1       1.00      1.00      1.00     16539\n",
      "           2       0.67      0.02      0.04       284\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.67      0.68     26206\n",
      "weighted avg       0.99      0.99      0.98     26206\n",
      "\n",
      "[[ 9380     0     3]\n",
      " [    0 16539     0]\n",
      " [  278     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9527\n",
      "           1       1.00      1.00      1.00     16438\n",
      "           2       1.00      0.01      0.02       241\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.99      0.67      0.67     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9527     0     0]\n",
      " [    0 16438     0]\n",
      " [  238     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9493\n",
      "           1       1.00      1.00      1.00     16471\n",
      "           2       0.89      0.03      0.06       242\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.95      0.68      0.68     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9492     0     1]\n",
      " [    0 16471     0]\n",
      " [  234     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9385\n",
      "           1       1.00      1.00      1.00     16553\n",
      "           2       0.80      0.01      0.03       268\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.92      0.67      0.67     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9384     0     1]\n",
      " [    0 16553     0]\n",
      " [  264     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9372\n",
      "           1       1.00      1.00      1.00     16559\n",
      "           2       0.38      0.01      0.02       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.78      0.67      0.67     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9367     0     5]\n",
      " [    0 16559     0]\n",
      " [  272     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9438\n",
      "           1       1.00      1.00      1.00     16493\n",
      "           2       0.33      0.00      0.01       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.77      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9436     0     2]\n",
      " [    0 16493     0]\n",
      " [  274     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      9508\n",
      "           1       1.00      1.00      1.00     16399\n",
      "           2       0.86      0.02      0.04       299\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.94      0.67      0.67     26206\n",
      "weighted avg       0.99      0.99      0.98     26206\n",
      "\n",
      "[[ 9507     0     1]\n",
      " [    0 16399     0]\n",
      " [  293     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14277\n",
      "           1       1.00      1.00      1.00     24653\n",
      "           2       0.69      0.02      0.05       379\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.89      0.67      0.68     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14273     0     4]\n",
      " [    0 24653     0]\n",
      " [  370     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14164\n",
      "           1       1.00      1.00      1.00     24777\n",
      "           2       0.50      0.02      0.04       368\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.83      0.67      0.68     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14156     0     8]\n",
      " [    0 24777     0]\n",
      " [  360     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14087\n",
      "           1       1.00      1.00      1.00     24827\n",
      "           2       0.56      0.01      0.02       395\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.84      0.67      0.67     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14083     0     4]\n",
      " [    0 24827     0]\n",
      " [  390     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14258\n",
      "           1       1.00      1.00      1.00     24676\n",
      "           2       0.55      0.02      0.03       375\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.84      0.67      0.67     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14253     0     5]\n",
      " [    0 24676     0]\n",
      " [  369     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14185\n",
      "           1       1.00      1.00      1.00     24754\n",
      "           2       0.73      0.02      0.04       370\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.90      0.67      0.68     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14182     0     3]\n",
      " [    0 24754     0]\n",
      " [  362     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14193\n",
      "           1       1.00      1.00      1.00     24713\n",
      "           2       0.86      0.01      0.03       403\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.94      0.67      0.67     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14192     0     1]\n",
      " [    0 24713     0]\n",
      " [  397     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14086\n",
      "           1       1.00      1.00      1.00     24822\n",
      "           2       0.50      0.01      0.03       401\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.82      0.67      0.67     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14080     0     6]\n",
      " [    0 24822     0]\n",
      " [  395     0     6]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14154\n",
      "           1       1.00      1.00      1.00     24742\n",
      "           2       0.43      0.01      0.03       413\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.80      0.67      0.67     39309\n",
      "weighted avg       0.98      0.99      0.98     39309\n",
      "\n",
      "[[14146     0     8]\n",
      " [    0 24742     0]\n",
      " [  407     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14166\n",
      "           1       1.00      1.00      1.00     24714\n",
      "           2       0.61      0.05      0.09       429\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.86      0.68      0.69     39309\n",
      "weighted avg       0.99      0.99      0.98     39309\n",
      "\n",
      "[[14152     0    14]\n",
      " [    0 24714     0]\n",
      " [  407     0    22]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 521457\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15583\n",
      "           1       1.00      1.00      1.00     26888\n",
      "           2       0.77      0.02      0.05       411\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.91      0.67      0.68     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15580     0     3]\n",
      " [    0 26888     0]\n",
      " [  401     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15459\n",
      "           1       1.00      1.00      1.00     27027\n",
      "           2       0.56      0.02      0.04       396\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.85      0.67      0.68     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15452     0     7]\n",
      " [    0 27027     0]\n",
      " [  387     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15380\n",
      "           1       1.00      1.00      1.00     27073\n",
      "           2       0.31      0.01      0.02       429\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.76      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.99     42882\n",
      "\n",
      "[[15371     0     9]\n",
      " [    0 27073     0]\n",
      " [  425     0     4]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15574\n",
      "           1       1.00      1.00      1.00     26899\n",
      "           2       0.62      0.01      0.02       409\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.87      0.67      0.67     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15571     0     3]\n",
      " [    0 26899     0]\n",
      " [  404     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15442\n",
      "           1       1.00      1.00      1.00     27033\n",
      "           2       0.75      0.02      0.04       407\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.91      0.67      0.68     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15439     0     3]\n",
      " [    0 27033     0]\n",
      " [  398     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15496\n",
      "           1       1.00      1.00      1.00     26946\n",
      "           2       0.68      0.06      0.10       440\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.88      0.69      0.70     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15484     0    12]\n",
      " [    0 26946     0]\n",
      " [  415     0    25]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15438\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.43      0.01      0.03       442\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.80      0.67      0.67     42882\n",
      "weighted avg       0.98      0.99      0.98     42882\n",
      "\n",
      "[[15430     0     8]\n",
      " [    0 27002     0]\n",
      " [  436     0     6]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.62      0.02      0.04       443\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.87      0.67      0.68     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15431     0     6]\n",
      " [    0 27002     0]\n",
      " [  433     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     15403\n",
      "           1       1.00      1.00      1.00     27023\n",
      "           2       0.66      0.05      0.09       456\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.88      0.68      0.69     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15391     0    12]\n",
      " [    0 27023     0]\n",
      " [  433     0    23]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18111\n",
      "           1       1.00      1.00      1.00     31424\n",
      "           2       0.55      0.02      0.05       494\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.84      0.67      0.68     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[18101     0    10]\n",
      " [    0 31424     0]\n",
      " [  482     0    12]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17953\n",
      "           1       1.00      1.00      1.00     31598\n",
      "           2       0.53      0.02      0.04       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.83      0.67      0.68     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17944     0     9]\n",
      " [    0 31598     0]\n",
      " [  468     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17939\n",
      "           1       1.00      1.00      1.00     31592\n",
      "           2       0.39      0.02      0.04       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.79      0.67      0.68     50029\n",
      "weighted avg       0.98      0.99      0.99     50029\n",
      "\n",
      "[[17922     0    17]\n",
      " [    0 31592     0]\n",
      " [  487     0    11]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18150\n",
      "           1       1.00      1.00      1.00     31396\n",
      "           2       0.54      0.01      0.03       483\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.84      0.67      0.67     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[18144     0     6]\n",
      " [    0 31396     0]\n",
      " [  476     0     7]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18028\n",
      "           1       1.00      1.00      1.00     31523\n",
      "           2       0.67      0.02      0.03       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.88      0.67      0.67     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[18024     0     4]\n",
      " [    0 31523     0]\n",
      " [  470     0     8]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18004\n",
      "           1       1.00      1.00      1.00     31527\n",
      "           2       0.68      0.04      0.07       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.88      0.68      0.69     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17995     0     9]\n",
      " [    0 31527     0]\n",
      " [  479     0    19]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18042\n",
      "           1       1.00      1.00      1.00     31470\n",
      "           2       0.50      0.01      0.03       517\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.82      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18035     0     7]\n",
      " [    0 31470     0]\n",
      " [  510     0     7]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     18059\n",
      "           1       1.00      1.00      1.00     31458\n",
      "           2       0.47      0.01      0.03       512\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.81      0.67      0.67     50029\n",
      "weighted avg       0.98      0.99      0.98     50029\n",
      "\n",
      "[[18051     0     8]\n",
      " [    0 31458     0]\n",
      " [  505     0     7]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     17980\n",
      "           1       1.00      1.00      1.00     31533\n",
      "           2       0.66      0.04      0.07       516\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.88      0.68      0.69     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17970     0    10]\n",
      " [    0 31533     0]\n",
      " [  497     0    19]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19359\n",
      "           1       1.00      1.00      1.00     33707\n",
      "           2       0.59      0.02      0.04       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.85      0.67      0.67     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19352     0     7]\n",
      " [    0 33707     0]\n",
      " [  527     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19231\n",
      "           1       1.00      1.00      1.00     33860\n",
      "           2       0.69      0.02      0.03       512\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.89      0.67      0.67     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19227     0     4]\n",
      " [    0 33860     0]\n",
      " [  503     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19178\n",
      "           1       1.00      1.00      1.00     33890\n",
      "           2       0.48      0.02      0.04       535\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.82      0.67      0.68     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19165     0    13]\n",
      " [    0 33890     0]\n",
      " [  523     0    12]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19447\n",
      "           1       1.00      1.00      1.00     33629\n",
      "           2       0.78      0.03      0.05       527\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.92      0.68      0.68     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19443     0     4]\n",
      " [    0 33629     0]\n",
      " [  513     0    14]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19280\n",
      "           1       1.00      1.00      1.00     33810\n",
      "           2       0.80      0.03      0.06       513\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.92      0.68      0.68     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19276     0     4]\n",
      " [    0 33810     0]\n",
      " [  497     0    16]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19294\n",
      "           1       1.00      1.00      1.00     33773\n",
      "           2       0.84      0.04      0.07       536\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.94      0.68      0.69     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19290     0     4]\n",
      " [    0 33773     0]\n",
      " [  515     0    21]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19309\n",
      "           1       1.00      1.00      1.00     33740\n",
      "           2       0.65      0.03      0.06       554\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.88      0.68      0.68     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19300     0     9]\n",
      " [    0 33740     0]\n",
      " [  537     0    17]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19379\n",
      "           1       1.00      1.00      1.00     33674\n",
      "           2       0.25      0.01      0.01       550\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.74      0.67      0.67     53603\n",
      "weighted avg       0.98      0.99      0.98     53603\n",
      "\n",
      "[[19367     0    12]\n",
      " [    0 33674     0]\n",
      " [  546     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     19267\n",
      "           1       1.00      1.00      1.00     33784\n",
      "           2       0.70      0.05      0.09       552\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.89      0.68      0.69     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19256     0    11]\n",
      " [    0 33784     0]\n",
      " [  526     0    26]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14705\n",
      "           1       1.00      1.00      1.00     25401\n",
      "           2       0.83      0.03      0.05       394\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.94      0.68      0.68     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14703     0     2]\n",
      " [    0 25401     0]\n",
      " [  384     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14605\n",
      "           1       1.00      1.00      1.00     25518\n",
      "           2       0.62      0.03      0.05       377\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.87      0.68      0.68     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14599     0     6]\n",
      " [    0 25518     0]\n",
      " [  367     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14499\n",
      "           1       1.00      1.00      1.00     25595\n",
      "           2       0.85      0.03      0.05       406\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.94      0.68      0.68     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14497     0     2]\n",
      " [    0 25595     0]\n",
      " [  395     0    11]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14696\n",
      "           1       1.00      1.00      1.00     25417\n",
      "           2       0.62      0.01      0.03       387\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.87      0.67      0.67     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14693     0     3]\n",
      " [    0 25417     0]\n",
      " [  382     0     5]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14601\n",
      "           1       1.00      1.00      1.00     25519\n",
      "           2       0.83      0.03      0.05       380\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.94      0.68      0.68     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14599     0     2]\n",
      " [    0 25519     0]\n",
      " [  370     0    10]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14631\n",
      "           1       1.00      1.00      1.00     25454\n",
      "           2       0.61      0.04      0.08       415\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.86      0.68      0.69     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14620     0    11]\n",
      " [    0 25454     0]\n",
      " [  398     0    17]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14528\n",
      "           1       1.00      1.00      1.00     25557\n",
      "           2       0.56      0.02      0.04       415\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.85      0.67      0.68     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14521     0     7]\n",
      " [    0 25557     0]\n",
      " [  406     0     9]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14570\n",
      "           1       1.00      1.00      1.00     25509\n",
      "           2       0.29      0.00      0.01       421\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.75      0.67      0.66     40500\n",
      "weighted avg       0.98      0.99      0.98     40500\n",
      "\n",
      "[[14565     0     5]\n",
      " [    0 25509     0]\n",
      " [  419     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14576\n",
      "           1       1.00      1.00      1.00     25485\n",
      "           2       0.53      0.05      0.09       439\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.83      0.68      0.69     40500\n",
      "weighted avg       0.98      0.99      0.98     40500\n",
      "\n",
      "[[14557     0    19]\n",
      " [    0 25485     0]\n",
      " [  418     0    21]]\n",
      "Accuracy is  0.98\n",
      "The Average of All acuracies 0.9875308641975302\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x24fafea8188>"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "length,AVGAccuracy,AD=Adaboost_Classifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AVGAccuracy)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))\n",
    "feautreimportance=pd.Series(AD.feature_importances_, index=Predictor)\n",
    "feautreimportance.nlargest(10).plot(kind='bar')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [],
   "source": [
    "from xgboost import XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Xgboost_classifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.22,0.33,0.36,0.42,0.45,0.34,0.28,0.48,0.10]\n",
    "    Random_state=[521457,7505,32578,5,2567,4789,8547,657,42,5407,7,124567]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            xgb=XGBClassifier(max_depth=5, learning_rate=0.1, n_estimators=400, objective='binary:logistic', booster='gbtree')\n",
    "            predictModel=xgb.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy,xgb ) \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.69      0.25      0.37       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.75      0.79     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12987     0    39]\n",
      " [    0 22362     0]\n",
      " [  259     0    88]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12876\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.64      0.19      0.30       334\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.87      0.73      0.76     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12839     0    37]\n",
      " [    0 22525     0]\n",
      " [  269     0    65]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.60      0.21      0.31       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.86      0.74      0.77     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12775     0    49]\n",
      " [    0 22552     0]\n",
      " [  284     0    75]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.60      0.23      0.33       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.86      0.74      0.77     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12923     0    53]\n",
      " [    0 22416     0]\n",
      " [  265     0    78]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.69      0.19      0.30       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.73      0.76     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12884     0    29]\n",
      " [    0 22483     0]\n",
      " [  274     0    65]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.66      0.20      0.31       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.73      0.77     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12860     0    39]\n",
      " [    0 22470     0]\n",
      " [  291     0    75]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.64      0.20      0.31       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.87      0.73      0.77     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12761     0    41]\n",
      " [    0 22571     0]\n",
      " [  288     0    74]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.73      0.23      0.35       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.90      0.74      0.78     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12800     0    33]\n",
      " [    0 22525     0]\n",
      " [  289     0    88]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12906\n",
      "           1       1.00      1.00      1.00     22433\n",
      "           2       0.71      0.21      0.33       396\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.74      0.77     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12871     0    35]\n",
      " [    0 22433     0]\n",
      " [  311     0    85]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5407\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12882\n",
      "           1       1.00      1.00      1.00     22488\n",
      "           2       0.60      0.21      0.31       365\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.86      0.73      0.76     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12832     0    50]\n",
      " [    0 22488     0]\n",
      " [  290     0    75]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22485\n",
      "           2       0.68      0.23      0.34       351\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.74      0.78     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12862     0    37]\n",
      " [    0 22485     0]\n",
      " [  271     0    80]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 124567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12837\n",
      "           1       1.00      1.00      1.00     22536\n",
      "           2       0.67      0.21      0.32       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.74      0.77     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12799     0    38]\n",
      " [    0 22536     0]\n",
      " [  285     0    77]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10840\n",
      "           1       1.00      1.00      1.00     18653\n",
      "           2       0.66      0.23      0.35       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.74      0.78     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10806     0    34]\n",
      " [    0 18653     0]\n",
      " [  219     0    67]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10722\n",
      "           1       1.00      1.00      1.00     18771\n",
      "           2       0.67      0.20      0.31       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.73      0.77     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10694     0    28]\n",
      " [    0 18771     0]\n",
      " [  229     0    57]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10677\n",
      "           1       1.00      1.00      1.00     18795\n",
      "           2       0.64      0.22      0.33       307\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.87      0.74      0.77     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10638     0    39]\n",
      " [    0 18795     0]\n",
      " [  238     0    69]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10806\n",
      "           1       1.00      1.00      1.00     18691\n",
      "           2       0.57      0.22      0.31       282\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.85      0.74      0.77     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10760     0    46]\n",
      " [    0 18691     0]\n",
      " [  221     0    61]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10792\n",
      "           1       1.00      1.00      1.00     18710\n",
      "           2       0.66      0.19      0.30       277\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.73      0.76     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10765     0    27]\n",
      " [    0 18710     0]\n",
      " [  224     0    53]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10728\n",
      "           1       1.00      1.00      1.00     18750\n",
      "           2       0.66      0.20      0.31       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.73      0.77     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10696     0    32]\n",
      " [    0 18750     0]\n",
      " [  240     0    61]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10685\n",
      "           1       1.00      1.00      1.00     18793\n",
      "           2       0.64      0.23      0.33       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.87      0.74      0.77     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10647     0    38]\n",
      " [    0 18793     0]\n",
      " [  233     0    68]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10698\n",
      "           1       1.00      1.00      1.00     18766\n",
      "           2       0.76      0.24      0.37       315\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.91      0.75      0.78     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10674     0    24]\n",
      " [    0 18766     0]\n",
      " [  239     0    76]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10762\n",
      "           1       1.00      1.00      1.00     18682\n",
      "           2       0.72      0.21      0.32       335\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.90      0.74      0.77     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10735     0    27]\n",
      " [    0 18682     0]\n",
      " [  265     0    70]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 5407\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10694\n",
      "           1       1.00      1.00      1.00     18789\n",
      "           2       0.60      0.20      0.30       296\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.86      0.73      0.76     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10656     0    38]\n",
      " [    0 18789     0]\n",
      " [  238     0    58]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10756\n",
      "           1       1.00      1.00      1.00     18727\n",
      "           2       0.70      0.23      0.35       296\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.89      0.74      0.78     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10727     0    29]\n",
      " [    0 18727     0]\n",
      " [  227     0    69]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 124567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10749\n",
      "           1       1.00      1.00      1.00     18727\n",
      "           2       0.59      0.17      0.27       303\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.86      0.72      0.75     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10713     0    36]\n",
      " [    0 18727     0]\n",
      " [  251     0    52]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9119\n",
      "           1       1.00      1.00      1.00     15667\n",
      "           2       0.64      0.24      0.35       229\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.87      0.74      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9089     0    30]\n",
      " [    0 15667     0]\n",
      " [  175     0    54]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8993\n",
      "           1       1.00      1.00      1.00     15776\n",
      "           2       0.66      0.21      0.32       246\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.73      0.77     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8967     0    26]\n",
      " [    0 15776     0]\n",
      " [  195     0    51]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8947\n",
      "           1       1.00      1.00      1.00     15791\n",
      "           2       0.66      0.22      0.33       277\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.74      0.77     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8916     0    31]\n",
      " [    0 15791     0]\n",
      " [  217     0    60]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9137\n",
      "           1       1.00      1.00      1.00     15648\n",
      "           2       0.59      0.25      0.35       230\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.86      0.75      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9097     0    40]\n",
      " [    0 15648     0]\n",
      " [  173     0    57]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9058\n",
      "           1       1.00      1.00      1.00     15725\n",
      "           2       0.64      0.22      0.32       232\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.87      0.74      0.77     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9030     0    28]\n",
      " [    0 15725     0]\n",
      " [  182     0    50]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8935\n",
      "           1       1.00      1.00      1.00     15825\n",
      "           2       0.68      0.20      0.31       255\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.89      0.73      0.77     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8911     0    24]\n",
      " [    0 15825     0]\n",
      " [  204     0    51]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8932\n",
      "           1       1.00      1.00      1.00     15818\n",
      "           2       0.67      0.22      0.33       265\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.74      0.77     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8904     0    28]\n",
      " [    0 15818     0]\n",
      " [  208     0    57]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9004\n",
      "           1       1.00      1.00      1.00     15750\n",
      "           2       0.73      0.23      0.35       261\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.90      0.74      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8982     0    22]\n",
      " [    0 15750     0]\n",
      " [  201     0    60]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9064\n",
      "           1       1.00      1.00      1.00     15669\n",
      "           2       0.75      0.23      0.36       282\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.91      0.74      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9042     0    22]\n",
      " [    0 15669     0]\n",
      " [  216     0    66]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 5407\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9004\n",
      "           1       1.00      1.00      1.00     15755\n",
      "           2       0.68      0.21      0.32       256\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.74      0.77     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8978     0    26]\n",
      " [    0 15755     0]\n",
      " [  202     0    54]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8970\n",
      "           1       1.00      1.00      1.00     15804\n",
      "           2       0.68      0.22      0.34       241\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.89      0.74      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8945     0    25]\n",
      " [    0 15804     0]\n",
      " [  187     0    54]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 124567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9087\n",
      "           1       1.00      1.00      1.00     15690\n",
      "           2       0.60      0.17      0.26       238\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.86      0.72      0.75     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9060     0    27]\n",
      " [    0 15690     0]\n",
      " [  198     0    40]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9557\n",
      "           1       1.00      1.00      1.00     16409\n",
      "           2       0.66      0.24      0.35       240\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9527     0    30]\n",
      " [    0 16409     0]\n",
      " [  182     0    58]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9430\n",
      "           1       1.00      1.00      1.00     16519\n",
      "           2       0.64      0.20      0.31       257\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.73      0.77     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9401     0    29]\n",
      " [    0 16519     0]\n",
      " [  205     0    52]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9383\n",
      "           1       1.00      1.00      1.00     16539\n",
      "           2       0.67      0.23      0.34       284\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.74      0.77     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9352     0    31]\n",
      " [    0 16539     0]\n",
      " [  220     0    64]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9527\n",
      "           1       1.00      1.00      1.00     16438\n",
      "           2       0.62      0.22      0.33       241\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.74      0.77     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9494     0    33]\n",
      " [    0 16438     0]\n",
      " [  187     0    54]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9493\n",
      "           1       1.00      1.00      1.00     16471\n",
      "           2       0.61      0.19      0.29       242\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.86      0.73      0.76     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9463     0    30]\n",
      " [    0 16471     0]\n",
      " [  195     0    47]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9385\n",
      "           1       1.00      1.00      1.00     16553\n",
      "           2       0.64      0.19      0.30       268\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.73      0.76     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9356     0    29]\n",
      " [    0 16553     0]\n",
      " [  216     0    52]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9372\n",
      "           1       1.00      1.00      1.00     16559\n",
      "           2       0.63      0.23      0.34       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.74      0.77     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9335     0    37]\n",
      " [    0 16559     0]\n",
      " [  212     0    63]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9438\n",
      "           1       1.00      1.00      1.00     16493\n",
      "           2       0.76      0.24      0.36       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.91      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9417     0    21]\n",
      " [    0 16493     0]\n",
      " [  209     0    66]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9508\n",
      "           1       1.00      1.00      1.00     16399\n",
      "           2       0.75      0.22      0.35       299\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.91      0.74      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9486     0    22]\n",
      " [    0 16399     0]\n",
      " [  232     0    67]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 5407\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9426\n",
      "           1       1.00      1.00      1.00     16511\n",
      "           2       0.72      0.21      0.33       269\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.90      0.74      0.77     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9404     0    22]\n",
      " [    0 16511     0]\n",
      " [  212     0    57]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 7\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9397\n",
      "           1       1.00      1.00      1.00     16553\n",
      "           2       0.69      0.24      0.36       256\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.89      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9369     0    28]\n",
      " [    0 16553     0]\n",
      " [  194     0    62]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 124567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9493\n",
      "           1       1.00      1.00      1.00     16455\n",
      "           2       0.63      0.19      0.29       258\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.73      0.76     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9464     0    29]\n",
      " [    0 16455     0]\n",
      " [  209     0    49]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14277\n",
      "           1       1.00      1.00      1.00     24653\n",
      "           2       0.65      0.23      0.34       379\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.88      0.74      0.78     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14230     0    47]\n",
      " [    0 24653     0]\n",
      " [  291     0    88]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14164\n",
      "           1       1.00      1.00      1.00     24777\n",
      "           2       0.61      0.20      0.30       368\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.86      0.73      0.76     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14118     0    46]\n",
      " [    0 24777     0]\n",
      " [  295     0    73]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14087\n",
      "           1       1.00      1.00      1.00     24827\n",
      "           2       0.62      0.22      0.32       395\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.87      0.74      0.77     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14036     0    51]\n",
      " [    0 24827     0]\n",
      " [  310     0    85]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 5\n"
     ]
    }
   ],
   "source": [
    "length,AvgACC,XG=Xgboost_classifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AvgACC)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))\n",
    "feautreimportance=pd.Series(XG.feature_importances_, index=Predictor)\n",
    "feautreimportance.nlargest(10).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "from lightgbm import LGBMClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def lightbgmclassifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.22,0.33,0.36,0.42,0.45,0.34]\n",
    "    Random_state=[521457,7505,32578,5,2567,4789,8547,657,42]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            lgb=LGBMClassifier(max_depth=-1,learning_rate=0.1,n_estimators=300)\n",
    "            predictModel=lgb.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy, lgb )             \n",
    "                       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.66      0.30      0.42       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.77      0.80     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12972     0    54]\n",
      " [    0 22362     0]\n",
      " [  242     0   105]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12876\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.65      0.29      0.40       334\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.76      0.80     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12824     0    52]\n",
      " [    0 22525     0]\n",
      " [  237     0    97]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.61      0.27      0.38       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.86      0.76      0.79     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12762     0    62]\n",
      " [    0 22552     0]\n",
      " [  261     0    98]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.56      0.28      0.37       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.85      0.76      0.79     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12902     0    74]\n",
      " [    0 22416     0]\n",
      " [  248     0    95]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.62      0.23      0.34       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.87      0.74      0.78     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12864     0    49]\n",
      " [    0 22483     0]\n",
      " [  260     0    79]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.64      0.24      0.35       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.87      0.75      0.78     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12850     0    49]\n",
      " [    0 22470     0]\n",
      " [  277     0    89]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.63      0.27      0.37       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.87      0.75      0.79     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12746     0    56]\n",
      " [    0 22571     0]\n",
      " [  266     0    96]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.69      0.32      0.44       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.77      0.81     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12778     0    55]\n",
      " [    0 22525     0]\n",
      " [  255     0   122]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     12906\n",
      "           1       1.00      1.00      1.00     22433\n",
      "           2       0.65      0.26      0.37       396\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.88      0.75      0.79     35735\n",
      "weighted avg       0.99      0.99      0.99     35735\n",
      "\n",
      "[[12852     0    54]\n",
      " [    0 22433     0]\n",
      " [  294     0   102]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10840\n",
      "           1       1.00      1.00      1.00     18653\n",
      "           2       0.67      0.30      0.41       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.76      0.80     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10798     0    42]\n",
      " [    0 18653     0]\n",
      " [  201     0    85]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10722\n",
      "           1       1.00      1.00      1.00     18771\n",
      "           2       0.66      0.27      0.38       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.76      0.79     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10682     0    40]\n",
      " [    0 18771     0]\n",
      " [  209     0    77]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10677\n",
      "           1       1.00      1.00      1.00     18795\n",
      "           2       0.62      0.28      0.38       307\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.87      0.76      0.79     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10625     0    52]\n",
      " [    0 18795     0]\n",
      " [  222     0    85]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     10806\n",
      "           1       1.00      1.00      1.00     18691\n",
      "           2       0.54      0.28      0.37       282\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.84      0.76      0.79     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10737     0    69]\n",
      " [    0 18691     0]\n",
      " [  202     0    80]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10792\n",
      "           1       1.00      1.00      1.00     18710\n",
      "           2       0.57      0.25      0.35       277\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.85      0.75      0.78     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10741     0    51]\n",
      " [    0 18710     0]\n",
      " [  208     0    69]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10728\n",
      "           1       1.00      1.00      1.00     18750\n",
      "           2       0.68      0.25      0.36       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.89      0.75      0.78     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10693     0    35]\n",
      " [    0 18750     0]\n",
      " [  227     0    74]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10685\n",
      "           1       1.00      1.00      1.00     18793\n",
      "           2       0.62      0.28      0.39       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.87      0.76      0.79     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10634     0    51]\n",
      " [    0 18793     0]\n",
      " [  216     0    85]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10698\n",
      "           1       1.00      1.00      1.00     18766\n",
      "           2       0.67      0.30      0.41       315\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.76      0.80     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10651     0    47]\n",
      " [    0 18766     0]\n",
      " [  221     0    94]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10762\n",
      "           1       1.00      1.00      1.00     18682\n",
      "           2       0.66      0.23      0.34       335\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.74      0.78     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10721     0    41]\n",
      " [    0 18682     0]\n",
      " [  257     0    78]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9119\n",
      "           1       1.00      1.00      1.00     15667\n",
      "           2       0.66      0.29      0.41       229\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.76      0.80     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9085     0    34]\n",
      " [    0 15667     0]\n",
      " [  162     0    67]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8993\n",
      "           1       1.00      1.00      1.00     15776\n",
      "           2       0.64      0.26      0.37       246\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.87      0.75      0.79     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8956     0    37]\n",
      " [    0 15776     0]\n",
      " [  181     0    65]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8947\n",
      "           1       1.00      1.00      1.00     15791\n",
      "           2       0.64      0.27      0.38       277\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.87      0.76      0.79     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8905     0    42]\n",
      " [    0 15791     0]\n",
      " [  201     0    76]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99      9137\n",
      "           1       1.00      1.00      1.00     15648\n",
      "           2       0.52      0.28      0.37       230\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.83      0.76      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9077     0    60]\n",
      " [    0 15648     0]\n",
      " [  165     0    65]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9058\n",
      "           1       1.00      1.00      1.00     15725\n",
      "           2       0.57      0.25      0.35       232\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.85      0.75      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9014     0    44]\n",
      " [    0 15725     0]\n",
      " [  174     0    58]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8935\n",
      "           1       1.00      1.00      1.00     15825\n",
      "           2       0.67      0.25      0.36       255\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.75      0.78     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8904     0    31]\n",
      " [    0 15825     0]\n",
      " [  192     0    63]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      8932\n",
      "           1       1.00      1.00      1.00     15818\n",
      "           2       0.66      0.28      0.40       265\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.76      0.79     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8893     0    39]\n",
      " [    0 15818     0]\n",
      " [  190     0    75]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9004\n",
      "           1       1.00      1.00      1.00     15750\n",
      "           2       0.69      0.30      0.42       261\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.89      0.76      0.80     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8969     0    35]\n",
      " [    0 15750     0]\n",
      " [  183     0    78]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9064\n",
      "           1       1.00      1.00      1.00     15669\n",
      "           2       0.66      0.26      0.37       282\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.88      0.75      0.79     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9027     0    37]\n",
      " [    0 15669     0]\n",
      " [  209     0    73]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9557\n",
      "           1       1.00      1.00      1.00     16409\n",
      "           2       0.65      0.30      0.41       240\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.76      0.80     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9518     0    39]\n",
      " [    0 16409     0]\n",
      " [  169     0    71]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9430\n",
      "           1       1.00      1.00      1.00     16519\n",
      "           2       0.63      0.26      0.37       257\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9392     0    38]\n",
      " [    0 16519     0]\n",
      " [  191     0    66]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9383\n",
      "           1       1.00      1.00      1.00     16539\n",
      "           2       0.63      0.26      0.37       284\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.87      0.75      0.79     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9340     0    43]\n",
      " [    0 16539     0]\n",
      " [  210     0    74]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99      9527\n",
      "           1       1.00      1.00      1.00     16438\n",
      "           2       0.56      0.31      0.40       241\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.85      0.77      0.80     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9469     0    58]\n",
      " [    0 16438     0]\n",
      " [  167     0    74]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9493\n",
      "           1       1.00      1.00      1.00     16471\n",
      "           2       0.61      0.25      0.35       242\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.86      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9454     0    39]\n",
      " [    0 16471     0]\n",
      " [  182     0    60]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9385\n",
      "           1       1.00      1.00      1.00     16553\n",
      "           2       0.66      0.25      0.36       268\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9351     0    34]\n",
      " [    0 16553     0]\n",
      " [  201     0    67]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9372\n",
      "           1       1.00      1.00      1.00     16559\n",
      "           2       0.60      0.25      0.35       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.86      0.75      0.78     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9327     0    45]\n",
      " [    0 16559     0]\n",
      " [  207     0    68]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9438\n",
      "           1       1.00      1.00      1.00     16493\n",
      "           2       0.67      0.31      0.42       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.88      0.77      0.80     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9396     0    42]\n",
      " [    0 16493     0]\n",
      " [  191     0    84]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99      9508\n",
      "           1       1.00      1.00      1.00     16399\n",
      "           2       0.62      0.26      0.37       299\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.86      0.75      0.79     26206\n",
      "weighted avg       0.99      0.99      0.99     26206\n",
      "\n",
      "[[ 9459     0    49]\n",
      " [    0 16399     0]\n",
      " [  220     0    79]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14277\n",
      "           1       1.00      1.00      1.00     24653\n",
      "           2       0.64      0.28      0.39       379\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.87      0.76      0.79     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14216     0    61]\n",
      " [    0 24653     0]\n",
      " [  271     0   108]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14164\n",
      "           1       1.00      1.00      1.00     24777\n",
      "           2       0.64      0.27      0.38       368\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.87      0.76      0.79     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14109     0    55]\n",
      " [    0 24777     0]\n",
      " [  269     0    99]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14087\n",
      "           1       1.00      1.00      1.00     24827\n",
      "           2       0.64      0.27      0.38       395\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.87      0.75      0.79     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14027     0    60]\n",
      " [    0 24827     0]\n",
      " [  289     0   106]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     14258\n",
      "           1       1.00      1.00      1.00     24676\n",
      "           2       0.56      0.27      0.37       375\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.85      0.76      0.79     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14178     0    80]\n",
      " [    0 24676     0]\n",
      " [  272     0   103]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14185\n",
      "           1       1.00      1.00      1.00     24754\n",
      "           2       0.62      0.24      0.35       370\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.87      0.75      0.78     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14131     0    54]\n",
      " [    0 24754     0]\n",
      " [  280     0    90]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14193\n",
      "           1       1.00      1.00      1.00     24713\n",
      "           2       0.69      0.24      0.35       403\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.89      0.75      0.78     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14149     0    44]\n",
      " [    0 24713     0]\n",
      " [  307     0    96]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     14086\n",
      "           1       1.00      1.00      1.00     24822\n",
      "           2       0.59      0.28      0.38       401\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.86      0.76      0.79     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14008     0    78]\n",
      " [    0 24822     0]\n",
      " [  289     0   112]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14154\n",
      "           1       1.00      1.00      1.00     24742\n",
      "           2       0.65      0.30      0.41       413\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.88      0.76      0.80     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14088     0    66]\n",
      " [    0 24742     0]\n",
      " [  290     0   123]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14166\n",
      "           1       1.00      1.00      1.00     24714\n",
      "           2       0.66      0.28      0.39       429\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.88      0.76      0.79     39309\n",
      "weighted avg       0.99      0.99      0.99     39309\n",
      "\n",
      "[[14104     0    62]\n",
      " [    0 24714     0]\n",
      " [  309     0   120]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 521457\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15583\n",
      "           1       1.00      1.00      1.00     26888\n",
      "           2       0.62      0.29      0.40       411\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.87      0.76      0.79     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15511     0    72]\n",
      " [    0 26888     0]\n",
      " [  292     0   119]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15459\n",
      "           1       1.00      1.00      1.00     27027\n",
      "           2       0.61      0.26      0.37       396\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.86      0.75      0.78     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15394     0    65]\n",
      " [    0 27027     0]\n",
      " [  293     0   103]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     15380\n",
      "           1       1.00      1.00      1.00     27073\n",
      "           2       0.57      0.27      0.36       429\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.85      0.75      0.78     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15294     0    86]\n",
      " [    0 27073     0]\n",
      " [  315     0   114]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     15574\n",
      "           1       1.00      1.00      1.00     26899\n",
      "           2       0.56      0.27      0.36       409\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.85      0.75      0.78     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15488     0    86]\n",
      " [    0 26899     0]\n",
      " [  300     0   109]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15442\n",
      "           1       1.00      1.00      1.00     27033\n",
      "           2       0.64      0.25      0.36       407\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.87      0.75      0.78     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15385     0    57]\n",
      " [    0 27033     0]\n",
      " [  305     0   102]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15496\n",
      "           1       1.00      1.00      1.00     26946\n",
      "           2       0.65      0.23      0.34       440\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.88      0.74      0.78     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15441     0    55]\n",
      " [    0 26946     0]\n",
      " [  337     0   103]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15438\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.60      0.26      0.36       442\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.86      0.75      0.78     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15363     0    75]\n",
      " [    0 27002     0]\n",
      " [  328     0   114]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15437\n",
      "           1       1.00      1.00      1.00     27002\n",
      "           2       0.69      0.31      0.43       443\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.89      0.77      0.80     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15375     0    62]\n",
      " [    0 27002     0]\n",
      " [  306     0   137]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     15403\n",
      "           1       1.00      1.00      1.00     27023\n",
      "           2       0.67      0.29      0.40       456\n",
      "\n",
      "    accuracy                           0.99     42882\n",
      "   macro avg       0.88      0.76      0.80     42882\n",
      "weighted avg       0.99      0.99      0.99     42882\n",
      "\n",
      "[[15339     0    64]\n",
      " [    0 27023     0]\n",
      " [  325     0   131]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     18111\n",
      "           1       1.00      1.00      1.00     31424\n",
      "           2       0.64      0.30      0.41       494\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.87      0.77      0.80     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[18029     0    82]\n",
      " [    0 31424     0]\n",
      " [  346     0   148]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     17953\n",
      "           1       1.00      1.00      1.00     31598\n",
      "           2       0.62      0.24      0.35       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.87      0.75      0.78     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17881     0    72]\n",
      " [    0 31598     0]\n",
      " [  361     0   117]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     17939\n",
      "           1       1.00      1.00      1.00     31592\n",
      "           2       0.61      0.27      0.37       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.86      0.75      0.79     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17853     0    86]\n",
      " [    0 31592     0]\n",
      " [  364     0   134]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     18150\n",
      "           1       1.00      1.00      1.00     31396\n",
      "           2       0.54      0.27      0.36       483\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.84      0.75      0.78     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[18040     0   110]\n",
      " [    0 31396     0]\n",
      " [  355     0   128]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     18028\n",
      "           1       1.00      1.00      1.00     31523\n",
      "           2       0.62      0.24      0.35       478\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.87      0.75      0.78     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17955     0    73]\n",
      " [    0 31523     0]\n",
      " [  361     0   117]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     18004\n",
      "           1       1.00      1.00      1.00     31527\n",
      "           2       0.65      0.26      0.37       498\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.88      0.75      0.79     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17933     0    71]\n",
      " [    0 31527     0]\n",
      " [  368     0   130]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 8547\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     18042\n",
      "           1       1.00      1.00      1.00     31470\n",
      "           2       0.58      0.25      0.35       517\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.85      0.75      0.78     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17951     0    91]\n",
      " [    0 31470     0]\n",
      " [  389     0   128]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     18059\n",
      "           1       1.00      1.00      1.00     31458\n",
      "           2       0.66      0.30      0.41       512\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.88      0.76      0.80     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17979     0    80]\n",
      " [    0 31458     0]\n",
      " [  360     0   152]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     17980\n",
      "           1       1.00      1.00      1.00     31533\n",
      "           2       0.63      0.28      0.39       516\n",
      "\n",
      "    accuracy                           0.99     50029\n",
      "   macro avg       0.87      0.76      0.79     50029\n",
      "weighted avg       0.99      0.99      0.99     50029\n",
      "\n",
      "[[17895     0    85]\n",
      " [    0 31533     0]\n",
      " [  372     0   144]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19359\n",
      "           1       1.00      1.00      1.00     33707\n",
      "           2       0.63      0.28      0.39       537\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.87      0.76      0.79     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19271     0    88]\n",
      " [    0 33707     0]\n",
      " [  384     0   153]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19231\n",
      "           1       1.00      1.00      1.00     33860\n",
      "           2       0.60      0.25      0.35       512\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.86      0.75      0.78     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19146     0    85]\n",
      " [    0 33860     0]\n",
      " [  384     0   128]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19178\n",
      "           1       1.00      1.00      1.00     33890\n",
      "           2       0.60      0.25      0.36       535\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.86      0.75      0.78     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19088     0    90]\n",
      " [    0 33890     0]\n",
      " [  399     0   136]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     19447\n",
      "           1       1.00      1.00      1.00     33629\n",
      "           2       0.60      0.29      0.39       527\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.86      0.76      0.79     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19343     0   104]\n",
      " [    0 33629     0]\n",
      " [  374     0   153]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19280\n",
      "           1       1.00      1.00      1.00     33810\n",
      "           2       0.59      0.25      0.36       513\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.86      0.75      0.78     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19191     0    89]\n",
      " [    0 33810     0]\n",
      " [  383     0   130]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19294\n",
      "           1       1.00      1.00      1.00     33773\n",
      "           2       0.69      0.27      0.39       536\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.89      0.76      0.79     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19227     0    67]\n",
      " [    0 33773     0]\n",
      " [  389     0   147]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19309\n",
      "           1       1.00      1.00      1.00     33740\n",
      "           2       0.60      0.26      0.36       554\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.86      0.75      0.78     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19213     0    96]\n",
      " [    0 33740     0]\n",
      " [  412     0   142]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19379\n",
      "           1       1.00      1.00      1.00     33674\n",
      "           2       0.65      0.28      0.39       550\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.88      0.76      0.79     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19294     0    85]\n",
      " [    0 33674     0]\n",
      " [  394     0   156]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     19267\n",
      "           1       1.00      1.00      1.00     33784\n",
      "           2       0.61      0.26      0.36       552\n",
      "\n",
      "    accuracy                           0.99     53603\n",
      "   macro avg       0.86      0.75      0.78     53603\n",
      "weighted avg       0.99      0.99      0.99     53603\n",
      "\n",
      "[[19176     0    91]\n",
      " [    0 33784     0]\n",
      " [  411     0   141]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14705\n",
      "           1       1.00      1.00      1.00     25401\n",
      "           2       0.63      0.28      0.39       394\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.87      0.76      0.79     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14639     0    66]\n",
      " [    0 25401     0]\n",
      " [  282     0   112]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14605\n",
      "           1       1.00      1.00      1.00     25518\n",
      "           2       0.61      0.27      0.38       377\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.86      0.76      0.79     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14540     0    65]\n",
      " [    0 25518     0]\n",
      " [  275     0   102]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     14499\n",
      "           1       1.00      1.00      1.00     25595\n",
      "           2       0.58      0.28      0.37       406\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.85      0.76      0.79     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14419     0    80]\n",
      " [    0 25595     0]\n",
      " [  294     0   112]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     14696\n",
      "           1       1.00      1.00      1.00     25417\n",
      "           2       0.58      0.27      0.37       387\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.85      0.75      0.79     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14621     0    75]\n",
      " [    0 25417     0]\n",
      " [  283     0   104]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14601\n",
      "           1       1.00      1.00      1.00     25519\n",
      "           2       0.59      0.23      0.33       380\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.86      0.74      0.77     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14541     0    60]\n",
      " [    0 25519     0]\n",
      " [  294     0    86]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14631\n",
      "           1       1.00      1.00      1.00     25454\n",
      "           2       0.61      0.22      0.32       415\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.86      0.74      0.77     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14574     0    57]\n",
      " [    0 25454     0]\n",
      " [  324     0    91]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99     14528\n",
      "           1       1.00      1.00      1.00     25557\n",
      "           2       0.57      0.26      0.35       415\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.85      0.75      0.78     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14446     0    82]\n",
      " [    0 25557     0]\n",
      " [  308     0   107]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14570\n",
      "           1       1.00      1.00      1.00     25509\n",
      "           2       0.65      0.31      0.42       421\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.88      0.77      0.80     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14501     0    69]\n",
      " [    0 25509     0]\n",
      " [  292     0   129]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     14576\n",
      "           1       1.00      1.00      1.00     25485\n",
      "           2       0.67      0.27      0.38       439\n",
      "\n",
      "    accuracy                           0.99     40500\n",
      "   macro avg       0.88      0.75      0.79     40500\n",
      "weighted avg       0.99      0.99      0.99     40500\n",
      "\n",
      "[[14518     0    58]\n",
      " [    0 25485     0]\n",
      " [  322     0   117]]\n",
      "Accuracy is  0.99\n",
      "The Average of All acuracies 0.9899999999999994\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x23f3ccb2a88>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "length,AverageAcc,LGB=lightbgmclassifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AverageAcc)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))\n",
    "feautreimportance=pd.Series(LGB.feature_importances_, index=Predictor)\n",
    "feautreimportance.nlargest(10).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import svm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def svmclassifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.22,0.33,0.36,0.42,0.45,0.34,0.28,0.48,0.10]\n",
    "    Random_state=[521457,7505,32578,5,2567,4789,8547,657,42,5407,7,124567]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            SVC=svm.SVC(C=3, kernel='rbf', gamma=0.01)\n",
    "            predictModel=SVC.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy,SVC )             \n",
    "                       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 521457\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     13026\n",
      "           1       1.00      1.00      1.00     22362\n",
      "           2       0.71      0.03      0.06       347\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.90      0.67      0.68     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12977    46     3]\n",
      " [   20 22341     1]\n",
      " [  336     1    10]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     12876\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.91      0.03      0.06       334\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.96      0.67      0.68     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12827    48     1]\n",
      " [   27 22498     0]\n",
      " [  324     0    10]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.71      0.01      0.03       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.67      0.67     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12769    53     2]\n",
      " [   32 22520     0]\n",
      " [  353     1     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 5\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     12976\n",
      "           1       1.00      1.00      1.00     22416\n",
      "           2       0.88      0.04      0.08       343\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.95      0.68      0.69     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12930    45     1]\n",
      " [   27 22388     1]\n",
      " [  326     2    15]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.71      0.04      0.07       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.89      0.68      0.68     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12869    40     4]\n",
      " [   35 22447     1]\n",
      " [  327     0    12]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       1.00      0.03      0.06       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.99      0.68      0.68     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12835    64     0]\n",
      " [   30 22440     0]\n",
      " [  352     2    12]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n"
     ]
    }
   ],
   "source": [
    "length,AverageAcc,Svc=svmclassifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AverageAcc)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.naive_bayes import GaussianNB, MultinomialNB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def NaiveBayesClassifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.22,0.33,0.36,0.42,0.45,0.34]\n",
    "    Random_state=[525478,7505,32578,3257,2567,4789,8547,657,42]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            MNB=MultinomialNB()\n",
    "            predictModel=MNB.fit(X_train,y_train)\n",
    "            predictions=predictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy,MNB)      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     12835\n",
      "           1       1.00      0.65      0.78     22531\n",
      "           2       0.03      0.71      0.06       369\n",
      "\n",
      "    accuracy                           0.65     35735\n",
      "   macro avg       0.55      0.67      0.50     35735\n",
      "weighted avg       0.86      0.65      0.72     35735\n",
      "\n",
      "[[ 8330    11  4494]\n",
      " [ 4854 14561  3116]\n",
      " [  107     0   262]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     12876\n",
      "           1       1.00      0.66      0.79     22525\n",
      "           2       0.03      0.73      0.06       334\n",
      "\n",
      "    accuracy                           0.65     35735\n",
      "   macro avg       0.55      0.68      0.50     35735\n",
      "weighted avg       0.85      0.65      0.73     35735\n",
      "\n",
      "[[ 8343     5  4528]\n",
      " [ 5031 14778  2716]\n",
      " [   89     0   245]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     12824\n",
      "           1       1.00      0.66      0.79     22552\n",
      "           2       0.03      0.71      0.07       359\n",
      "\n",
      "    accuracy                           0.66     35735\n",
      "   macro avg       0.55      0.67      0.50     35735\n",
      "weighted avg       0.85      0.66      0.73     35735\n",
      "\n",
      "[[ 8324    11  4489]\n",
      " [ 5019 14856  2677]\n",
      " [  103     0   256]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     13080\n",
      "           1       1.00      0.58      0.73     22295\n",
      "           2       0.03      0.69      0.05       360\n",
      "\n",
      "    accuracy                           0.60     35735\n",
      "   macro avg       0.55      0.64      0.47     35735\n",
      "weighted avg       0.85      0.60      0.69     35735\n",
      "\n",
      "[[ 8489     5  4586]\n",
      " [ 5011 12880  4404]\n",
      " [  113     0   247]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     12913\n",
      "           1       1.00      0.58      0.74     22483\n",
      "           2       0.03      0.70      0.05       339\n",
      "\n",
      "    accuracy                           0.61     35735\n",
      "   macro avg       0.55      0.64      0.48     35735\n",
      "weighted avg       0.86      0.61      0.70     35735\n",
      "\n",
      "[[ 8398     8  4507]\n",
      " [ 4825 13124  4534]\n",
      " [  102     0   237]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     12899\n",
      "           1       1.00      0.59      0.75     22470\n",
      "           2       0.03      0.71      0.06       366\n",
      "\n",
      "    accuracy                           0.62     35735\n",
      "   macro avg       0.55      0.65      0.48     35735\n",
      "weighted avg       0.85      0.62      0.70     35735\n",
      "\n",
      "[[ 8407    10  4482]\n",
      " [ 5001 13346  4123]\n",
      " [  106     0   260]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     12802\n",
      "           1       1.00      0.59      0.74     22571\n",
      "           2       0.03      0.69      0.05       362\n",
      "\n",
      "    accuracy                           0.61     35735\n",
      "   macro avg       0.55      0.64      0.48     35735\n",
      "weighted avg       0.86      0.61      0.70     35735\n",
      "\n",
      "[[ 8248     7  4547]\n",
      " [ 4844 13297  4430]\n",
      " [  112     0   250]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.66      0.64     12833\n",
      "           1       1.00      0.64      0.78     22525\n",
      "           2       0.03      0.70      0.06       377\n",
      "\n",
      "    accuracy                           0.64     35735\n",
      "   macro avg       0.55      0.66      0.49     35735\n",
      "weighted avg       0.85      0.64      0.72     35735\n",
      "\n",
      "[[ 8411     8  4414]\n",
      " [ 5033 14329  3163]\n",
      " [  112     0   265]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     12906\n",
      "           1       1.00      0.60      0.75     22433\n",
      "           2       0.03      0.70      0.06       396\n",
      "\n",
      "    accuracy                           0.62     35735\n",
      "   macro avg       0.55      0.65      0.48     35735\n",
      "weighted avg       0.85      0.62      0.70     35735\n",
      "\n",
      "[[ 8420    10  4476]\n",
      " [ 4862 13498  4073]\n",
      " [  118     0   278]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     10729\n",
      "           1       1.00      0.64      0.78     18741\n",
      "           2       0.03      0.70      0.06       309\n",
      "\n",
      "    accuracy                           0.64     29779\n",
      "   macro avg       0.55      0.66      0.49     29779\n",
      "weighted avg       0.86      0.64      0.72     29779\n",
      "\n",
      "[[ 6975    11  3743]\n",
      " [ 4045 11972  2724]\n",
      " [   91     1   217]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     10722\n",
      "           1       1.00      0.66      0.79     18771\n",
      "           2       0.03      0.74      0.07       286\n",
      "\n",
      "    accuracy                           0.66     29779\n",
      "   macro avg       0.55      0.68      0.50     29779\n",
      "weighted avg       0.85      0.66      0.73     29779\n",
      "\n",
      "[[ 6966     6  3750]\n",
      " [ 4194 12358  2219]\n",
      " [   73     0   213]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     10677\n",
      "           1       1.00      0.66      0.79     18795\n",
      "           2       0.04      0.72      0.07       307\n",
      "\n",
      "    accuracy                           0.66     29779\n",
      "   macro avg       0.55      0.67      0.50     29779\n",
      "weighted avg       0.85      0.66      0.73     29779\n",
      "\n",
      "[[ 6942     9  3726]\n",
      " [ 4214 12359  2222]\n",
      " [   87     0   220]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     10897\n",
      "           1       1.00      0.57      0.73     18580\n",
      "           2       0.03      0.67      0.05       302\n",
      "\n",
      "    accuracy                           0.60     29779\n",
      "   macro avg       0.55      0.63      0.47     29779\n",
      "weighted avg       0.85      0.60      0.69     29779\n",
      "\n",
      "[[ 7027     4  3866]\n",
      " [ 4179 10679  3722]\n",
      " [   99     0   203]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     10792\n",
      "           1       1.00      0.59      0.74     18710\n",
      "           2       0.03      0.69      0.05       277\n",
      "\n",
      "    accuracy                           0.62     29779\n",
      "   macro avg       0.55      0.65      0.48     29779\n",
      "weighted avg       0.86      0.62      0.70     29779\n",
      "\n",
      "[[ 7050     5  3737]\n",
      " [ 3988 11078  3644]\n",
      " [   85     0   192]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     10728\n",
      "           1       1.00      0.60      0.75     18750\n",
      "           2       0.03      0.72      0.06       301\n",
      "\n",
      "    accuracy                           0.62     29779\n",
      "   macro avg       0.55      0.66      0.48     29779\n",
      "weighted avg       0.85      0.62      0.70     29779\n",
      "\n",
      "[[ 6988     6  3734]\n",
      " [ 4147 11294  3309]\n",
      " [   85     0   216]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     10685\n",
      "           1       1.00      0.61      0.76     18793\n",
      "           2       0.03      0.69      0.05       301\n",
      "\n",
      "    accuracy                           0.62     29779\n",
      "   macro avg       0.55      0.65      0.48     29779\n",
      "weighted avg       0.86      0.62      0.71     29779\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "[[ 6866     5  3814]\n",
      " [ 4039 11437  3317]\n",
      " [   93     0   208]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     10698\n",
      "           1       1.00      0.65      0.79     18766\n",
      "           2       0.04      0.72      0.07       315\n",
      "\n",
      "    accuracy                           0.65     29779\n",
      "   macro avg       0.55      0.67      0.50     29779\n",
      "weighted avg       0.85      0.65      0.72     29779\n",
      "\n",
      "[[ 6989     6  3703]\n",
      " [ 4161 12133  2472]\n",
      " [   87     0   228]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     10762\n",
      "           1       1.00      0.59      0.75     18682\n",
      "           2       0.03      0.70      0.06       335\n",
      "\n",
      "    accuracy                           0.62     29779\n",
      "   macro avg       0.55      0.65      0.48     29779\n",
      "weighted avg       0.85      0.62      0.70     29779\n",
      "\n",
      "[[ 7041     4  3717]\n",
      " [ 4073 11108  3501]\n",
      " [  101     0   234]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64      9022\n",
      "           1       1.00      0.63      0.78     15724\n",
      "           2       0.03      0.70      0.06       269\n",
      "\n",
      "    accuracy                           0.64     25015\n",
      "   macro avg       0.55      0.66      0.49     25015\n",
      "weighted avg       0.86      0.64      0.72     25015\n",
      "\n",
      "[[5896    8 3118]\n",
      " [3397 9954 2373]\n",
      " [  81    0  188]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64      8993\n",
      "           1       1.00      0.65      0.79     15776\n",
      "           2       0.03      0.74      0.07       246\n",
      "\n",
      "    accuracy                           0.65     25015\n",
      "   macro avg       0.55      0.68      0.50     25015\n",
      "weighted avg       0.85      0.65      0.73     25015\n",
      "\n",
      "[[ 5866     9  3118]\n",
      " [ 3534 10259  1983]\n",
      " [   64     0   182]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64      8947\n",
      "           1       1.00      0.66      0.79     15791\n",
      "           2       0.04      0.72      0.07       277\n",
      "\n",
      "    accuracy                           0.66     25015\n",
      "   macro avg       0.55      0.68      0.50     25015\n",
      "weighted avg       0.85      0.66      0.73     25015\n",
      "\n",
      "[[ 5857     7  3083]\n",
      " [ 3530 10397  1864]\n",
      " [   77     0   200]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63      9173\n",
      "           1       1.00      0.56      0.72     15589\n",
      "           2       0.03      0.66      0.05       253\n",
      "\n",
      "    accuracy                           0.60     25015\n",
      "   macro avg       0.55      0.63      0.47     25015\n",
      "weighted avg       0.85      0.60      0.68     25015\n",
      "\n",
      "[[5940    4 3229]\n",
      " [3532 8784 3273]\n",
      " [  85    0  168]]\n",
      "Accuracy is  0.68\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64      9058\n",
      "           1       1.00      0.60      0.75     15725\n",
      "           2       0.03      0.69      0.05       232\n",
      "\n",
      "    accuracy                           0.62     25015\n",
      "   macro avg       0.55      0.65      0.48     25015\n",
      "weighted avg       0.86      0.62      0.71     25015\n",
      "\n",
      "[[5886    3 3169]\n",
      " [3350 9481 2894]\n",
      " [  72    0  160]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63      8935\n",
      "           1       1.00      0.62      0.77     15825\n",
      "           2       0.03      0.72      0.06       255\n",
      "\n",
      "    accuracy                           0.63     25015\n",
      "   macro avg       0.55      0.66      0.49     25015\n",
      "weighted avg       0.85      0.63      0.71     25015\n",
      "\n",
      "[[5790    6 3139]\n",
      " [3504 9824 2497]\n",
      " [  72    0  183]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63      8932\n",
      "           1       1.00      0.64      0.78     15818\n",
      "           2       0.03      0.70      0.06       265\n",
      "\n",
      "    accuracy                           0.64     25015\n",
      "   macro avg       0.55      0.66      0.49     25015\n",
      "weighted avg       0.85      0.64      0.72     25015\n",
      "\n",
      "[[ 5686     2  3244]\n",
      " [ 3393 10080  2345]\n",
      " [   79     0   186]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64      9004\n",
      "           1       1.00      0.66      0.80     15750\n",
      "           2       0.04      0.74      0.07       261\n",
      "\n",
      "    accuracy                           0.66     25015\n",
      "   macro avg       0.55      0.68      0.50     25015\n",
      "weighted avg       0.85      0.66      0.73     25015\n",
      "\n",
      "[[ 5864     2  3138]\n",
      " [ 3488 10399  1863]\n",
      " [   68     0   193]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64      9064\n",
      "           1       1.00      0.60      0.75     15669\n",
      "           2       0.03      0.69      0.06       282\n",
      "\n",
      "    accuracy                           0.62     25015\n",
      "   macro avg       0.55      0.65      0.48     25015\n",
      "weighted avg       0.85      0.62      0.70     25015\n",
      "\n",
      "[[5935    4 3125]\n",
      " [3416 9330 2923]\n",
      " [  88    0  194]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64      9444\n",
      "           1       1.00      0.64      0.78     16483\n",
      "           2       0.03      0.71      0.06       279\n",
      "\n",
      "    accuracy                           0.65     26206\n",
      "   macro avg       0.55      0.67      0.50     26206\n",
      "weighted avg       0.86      0.65      0.72     26206\n",
      "\n",
      "[[ 6166     9  3269]\n",
      " [ 3551 10603  2329]\n",
      " [   81     1   197]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64      9430\n",
      "           1       1.00      0.66      0.79     16519\n",
      "           2       0.04      0.75      0.07       257\n",
      "\n",
      "    accuracy                           0.66     26206\n",
      "   macro avg       0.55      0.69      0.50     26206\n",
      "weighted avg       0.85      0.66      0.73     26206\n",
      "\n",
      "[[ 6154     8  3268]\n",
      " [ 3704 10882  1933]\n",
      " [   65     0   192]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63      9383\n",
      "           1       1.00      0.66      0.80     16539\n",
      "           2       0.04      0.72      0.07       284\n",
      "\n",
      "    accuracy                           0.66     26206\n",
      "   macro avg       0.55      0.68      0.50     26206\n",
      "weighted avg       0.85      0.66      0.73     26206\n",
      "\n",
      "[[ 6126     8  3249]\n",
      " [ 3714 10942  1883]\n",
      " [   79     0   205]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63      9612\n",
      "           1       1.00      0.57      0.73     16328\n",
      "           2       0.03      0.67      0.05       266\n",
      "\n",
      "    accuracy                           0.60     26206\n",
      "   macro avg       0.55      0.63      0.47     26206\n",
      "weighted avg       0.85      0.60      0.69     26206\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "[[6210    4 3398]\n",
      " [3701 9331 3296]\n",
      " [  88    0  178]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64      9493\n",
      "           1       1.00      0.60      0.75     16471\n",
      "           2       0.03      0.69      0.05       242\n",
      "\n",
      "    accuracy                           0.62     26206\n",
      "   macro avg       0.55      0.65      0.48     26206\n",
      "weighted avg       0.86      0.62      0.70     26206\n",
      "\n",
      "[[6182    3 3308]\n",
      " [3511 9834 3126]\n",
      " [  75    0  167]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63      9385\n",
      "           1       1.00      0.61      0.76     16553\n",
      "           2       0.03      0.71      0.06       268\n",
      "\n",
      "    accuracy                           0.63     26206\n",
      "   macro avg       0.55      0.66      0.48     26206\n",
      "weighted avg       0.85      0.63      0.71     26206\n",
      "\n",
      "[[ 6071     6  3308]\n",
      " [ 3668 10118  2767]\n",
      " [   77     0   191]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63      9372\n",
      "           1       1.00      0.62      0.77     16559\n",
      "           2       0.03      0.70      0.06       275\n",
      "\n",
      "    accuracy                           0.63     26206\n",
      "   macro avg       0.55      0.65      0.49     26206\n",
      "weighted avg       0.86      0.63      0.71     26206\n",
      "\n",
      "[[ 5994     3  3375]\n",
      " [ 3519 10315  2725]\n",
      " [   83     0   192]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64      9438\n",
      "           1       1.00      0.66      0.79     16493\n",
      "           2       0.04      0.74      0.07       275\n",
      "\n",
      "    accuracy                           0.66     26206\n",
      "   macro avg       0.55      0.68      0.50     26206\n",
      "weighted avg       0.85      0.66      0.73     26206\n",
      "\n",
      "[[ 6137     4  3297]\n",
      " [ 3641 10849  2003]\n",
      " [   71     0   204]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64      9508\n",
      "           1       1.00      0.60      0.75     16399\n",
      "           2       0.03      0.69      0.06       299\n",
      "\n",
      "    accuracy                           0.62     26206\n",
      "   macro avg       0.55      0.65      0.48     26206\n",
      "weighted avg       0.85      0.62      0.70     26206\n",
      "\n",
      "[[6224    4 3280]\n",
      " [3593 9764 3042]\n",
      " [  93    0  206]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     14092\n",
      "           1       1.00      0.64      0.78     24806\n",
      "           2       0.03      0.69      0.06       411\n",
      "\n",
      "    accuracy                           0.64     39309\n",
      "   macro avg       0.55      0.66      0.49     39309\n",
      "weighted avg       0.85      0.64      0.72     39309\n",
      "\n",
      "[[ 9115    12  4965]\n",
      " [ 5377 15882  3547]\n",
      " [  124     2   285]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     14164\n",
      "           1       1.00      0.67      0.80     24777\n",
      "           2       0.03      0.74      0.07       368\n",
      "\n",
      "    accuracy                           0.66     39309\n",
      "   macro avg       0.55      0.69      0.50     39309\n",
      "weighted avg       0.85      0.66      0.74     39309\n",
      "\n",
      "[[ 9173     9  4982]\n",
      " [ 5491 16644  2642]\n",
      " [   95     0   273]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     14087\n",
      "           1       1.00      0.67      0.80     24827\n",
      "           2       0.04      0.72      0.07       395\n",
      "\n",
      "    accuracy                           0.66     39309\n",
      "   macro avg       0.55      0.68      0.50     39309\n",
      "weighted avg       0.85      0.66      0.73     39309\n",
      "\n",
      "[[ 9114    11  4962]\n",
      " [ 5528 16553  2746]\n",
      " [  112     0   283]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14415\n",
      "           1       1.00      0.59      0.74     24498\n",
      "           2       0.03      0.70      0.05       396\n",
      "\n",
      "    accuracy                           0.61     39309\n",
      "   macro avg       0.55      0.65      0.48     39309\n",
      "weighted avg       0.85      0.61      0.70     39309\n",
      "\n",
      "[[ 9371     5  5039]\n",
      " [ 5451 14493  4554]\n",
      " [  120     0   276]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14185\n",
      "           1       1.00      0.60      0.75     24754\n",
      "           2       0.03      0.71      0.05       370\n",
      "\n",
      "    accuracy                           0.62     39309\n",
      "   macro avg       0.55      0.65      0.48     39309\n",
      "weighted avg       0.86      0.62      0.70     39309\n",
      "\n",
      "[[ 9261     8  4916]\n",
      " [ 5336 14739  4679]\n",
      " [  108     0   262]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     14193\n",
      "           1       1.00      0.59      0.74     24713\n",
      "           2       0.03      0.71      0.06       403\n",
      "\n",
      "    accuracy                           0.61     39309\n",
      "   macro avg       0.55      0.65      0.48     39309\n",
      "weighted avg       0.85      0.61      0.70     39309\n",
      "\n",
      "[[ 9256     9  4928]\n",
      " [ 5479 14600  4634]\n",
      " [  118     0   285]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14086\n",
      "           1       1.00      0.56      0.72     24822\n",
      "           2       0.03      0.69      0.05       401\n",
      "\n",
      "    accuracy                           0.59     39309\n",
      "   macro avg       0.55      0.63      0.47     39309\n",
      "weighted avg       0.86      0.59      0.68     39309\n",
      "\n",
      "[[ 9093     7  4986]\n",
      " [ 5314 13846  5662]\n",
      " [  125     0   276]]\n",
      "Accuracy is  0.68\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     14154\n",
      "           1       1.00      0.64      0.78     24742\n",
      "           2       0.03      0.71      0.06       413\n",
      "\n",
      "    accuracy                           0.64     39309\n",
      "   macro avg       0.55      0.67      0.49     39309\n",
      "weighted avg       0.85      0.64      0.72     39309\n",
      "\n",
      "[[ 9248    10  4896]\n",
      " [ 5525 15791  3426]\n",
      " [  121     0   292]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14166\n",
      "           1       1.00      0.59      0.74     24714\n",
      "           2       0.03      0.69      0.06       429\n",
      "\n",
      "    accuracy                           0.61     39309\n",
      "   macro avg       0.55      0.64      0.48     39309\n",
      "weighted avg       0.85      0.61      0.70     39309\n",
      "\n",
      "[[ 9242    13  4911]\n",
      " [ 5361 14471  4882]\n",
      " [  131     0   298]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     15414\n",
      "           1       1.00      0.64      0.78     27023\n",
      "           2       0.03      0.70      0.06       445\n",
      "\n",
      "    accuracy                           0.64     42882\n",
      "   macro avg       0.55      0.66      0.49     42882\n",
      "weighted avg       0.85      0.64      0.72     42882\n",
      "\n",
      "[[ 9966    14  5434]\n",
      " [ 5877 17353  3793]\n",
      " [  133     2   310]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 7505\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     15459\n",
      "           1       1.00      0.68      0.81     27027\n",
      "           2       0.03      0.74      0.07       396\n",
      "\n",
      "    accuracy                           0.67     42882\n",
      "   macro avg       0.55      0.69      0.50     42882\n",
      "weighted avg       0.85      0.67      0.74     42882\n",
      "\n",
      "[[10021    11  5427]\n",
      " [ 5991 18255  2781]\n",
      " [  104     0   292]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     15380\n",
      "           1       1.00      0.67      0.80     27073\n",
      "           2       0.04      0.72      0.07       429\n",
      "\n",
      "    accuracy                           0.66     42882\n",
      "   macro avg       0.55      0.68      0.50     42882\n",
      "weighted avg       0.85      0.66      0.73     42882\n",
      "\n",
      "[[ 9941    13  5426]\n",
      " [ 5998 18069  3006]\n",
      " [  122     0   307]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     15678\n",
      "           1       1.00      0.61      0.76     26770\n",
      "           2       0.03      0.71      0.06       434\n",
      "\n",
      "    accuracy                           0.63     42882\n",
      "   macro avg       0.55      0.66      0.49     42882\n",
      "weighted avg       0.85      0.63      0.71     42882\n",
      "\n",
      "[[10178     5  5495]\n",
      " [ 5926 16463  4381]\n",
      " [  128     0   306]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     15442\n",
      "           1       1.00      0.61      0.75     27033\n",
      "           2       0.03      0.72      0.05       407\n",
      "\n",
      "    accuracy                           0.62     42882\n",
      "   macro avg       0.55      0.66      0.48     42882\n",
      "weighted avg       0.86      0.62      0.71     42882\n",
      "\n",
      "[[10104    11  5327]\n",
      " [ 5820 16385  4828]\n",
      " [  115     0   292]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     15496\n",
      "           1       1.00      0.58      0.73     26946\n",
      "           2       0.03      0.70      0.05       440\n",
      "\n",
      "    accuracy                           0.61     42882\n",
      "   macro avg       0.55      0.64      0.48     42882\n",
      "weighted avg       0.85      0.61      0.69     42882\n",
      "\n",
      "[[10127    11  5358]\n",
      " [ 5978 15651  5317]\n",
      " [  132     0   308]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     15438\n",
      "           1       1.00      0.55      0.71     27002\n",
      "           2       0.03      0.69      0.05       442\n",
      "\n",
      "    accuracy                           0.59     42882\n",
      "   macro avg       0.55      0.63      0.47     42882\n",
      "weighted avg       0.86      0.59      0.68     42882\n",
      "\n",
      "[[ 9969     7  5462]\n",
      " [ 5787 14946  6269]\n",
      " [  139     0   303]]\n",
      "Accuracy is  0.68\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     15437\n",
      "           1       1.00      0.65      0.79     27002\n",
      "           2       0.03      0.71      0.07       443\n",
      "\n",
      "    accuracy                           0.65     42882\n",
      "   macro avg       0.55      0.67      0.50     42882\n",
      "weighted avg       0.85      0.65      0.73     42882\n",
      "\n",
      "[[10104    10  5323]\n",
      " [ 6049 17493  3460]\n",
      " [  127     0   316]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.36 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     15403\n",
      "           1       1.00      0.57      0.73     27023\n",
      "           2       0.03      0.69      0.05       456\n",
      "\n",
      "    accuracy                           0.60     42882\n",
      "   macro avg       0.55      0.64      0.47     42882\n",
      "weighted avg       0.85      0.60      0.69     42882\n",
      "\n",
      "[[10040    13  5350]\n",
      " [ 5865 15510  5648]\n",
      " [  142     0   314]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     17946\n",
      "           1       1.00      0.68      0.81     31572\n",
      "           2       0.04      0.71      0.07       511\n",
      "\n",
      "    accuracy                           0.67     50029\n",
      "   macro avg       0.55      0.68      0.50     50029\n",
      "weighted avg       0.85      0.67      0.74     50029\n",
      "\n",
      "[[11568    18  6360]\n",
      " [ 6936 21401  3235]\n",
      " [  147     2   362]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     17953\n",
      "           1       1.00      0.68      0.81     31598\n",
      "           2       0.04      0.73      0.07       478\n",
      "\n",
      "    accuracy                           0.67     50029\n",
      "   macro avg       0.55      0.68      0.50     50029\n",
      "weighted avg       0.85      0.67      0.74     50029\n",
      "\n",
      "[[11536    13  6404]\n",
      " [ 7058 21556  2984]\n",
      " [  128     2   348]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     17939\n",
      "           1       1.00      0.66      0.79     31592\n",
      "           2       0.03      0.71      0.06       498\n",
      "\n",
      "    accuracy                           0.65     50029\n",
      "   macro avg       0.55      0.67      0.50     50029\n",
      "weighted avg       0.85      0.65      0.73     50029\n",
      "\n",
      "[[11589    13  6337]\n",
      " [ 6953 20818  3821]\n",
      " [  146     0   352]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     18172\n",
      "           1       1.00      0.60      0.75     31344\n",
      "           2       0.03      0.70      0.06       513\n",
      "\n",
      "    accuracy                           0.62     50029\n",
      "   macro avg       0.55      0.65      0.48     50029\n",
      "weighted avg       0.85      0.62      0.70     50029\n",
      "\n",
      "[[11815     7  6350]\n",
      " [ 6934 18913  5497]\n",
      " [  152     0   361]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     18028\n",
      "           1       1.00      0.58      0.74     31523\n",
      "           2       0.03      0.71      0.05       478\n",
      "\n",
      "    accuracy                           0.61     50029\n",
      "   macro avg       0.55      0.65      0.48     50029\n",
      "weighted avg       0.86      0.61      0.70     50029\n",
      "\n",
      "[[11784    21  6223]\n",
      " [ 6832 18432  6259]\n",
      " [  140     0   338]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     18004\n",
      "           1       1.00      0.56      0.72     31527\n",
      "           2       0.03      0.69      0.05       498\n",
      "\n",
      "    accuracy                           0.60     50029\n",
      "   macro avg       0.55      0.63      0.47     50029\n",
      "weighted avg       0.85      0.60      0.68     50029\n",
      "\n",
      "[[11778    17  6209]\n",
      " [ 7009 17696  6822]\n",
      " [  156     0   342]]\n",
      "Accuracy is  0.68\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     18042\n",
      "           1       1.00      0.56      0.72     31470\n",
      "           2       0.03      0.69      0.05       517\n",
      "\n",
      "    accuracy                           0.59     50029\n",
      "   macro avg       0.55      0.63      0.47     50029\n",
      "weighted avg       0.85      0.59      0.68     50029\n",
      "\n",
      "[[11668    14  6360]\n",
      " [ 6806 17597  7067]\n",
      " [  160     0   357]]\n",
      "Accuracy is  0.68\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 657\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.66      0.64     18059\n",
      "           1       1.00      0.61      0.76     31458\n",
      "           2       0.03      0.70      0.06       512\n",
      "\n",
      "    accuracy                           0.63     50029\n",
      "   macro avg       0.55      0.66      0.49     50029\n",
      "weighted avg       0.85      0.63      0.71     50029\n",
      "\n",
      "[[11849    13  6197]\n",
      " [ 6962 19228  5268]\n",
      " [  152     0   360]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.42 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     17980\n",
      "           1       1.00      0.59      0.74     31533\n",
      "           2       0.03      0.70      0.05       516\n",
      "\n",
      "    accuracy                           0.61     50029\n",
      "   macro avg       0.55      0.64      0.48     50029\n",
      "weighted avg       0.85      0.61      0.70     50029\n",
      "\n",
      "[[11702    16  6262]\n",
      " [ 6855 18459  6219]\n",
      " [  156     1   359]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     19255\n",
      "           1       1.00      0.67      0.80     33811\n",
      "           2       0.03      0.71      0.07       537\n",
      "\n",
      "    accuracy                           0.66     53603\n",
      "   macro avg       0.55      0.67      0.50     53603\n",
      "weighted avg       0.85      0.66      0.74     53603\n",
      "\n",
      "[[12401    18  6836]\n",
      " [ 7356 22742  3713]\n",
      " [  155     2   380]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     19231\n",
      "           1       1.00      0.66      0.80     33860\n",
      "           2       0.03      0.72      0.06       512\n",
      "\n",
      "    accuracy                           0.66     53603\n",
      "   macro avg       0.55      0.68      0.50     53603\n",
      "weighted avg       0.85      0.66      0.73     53603\n",
      "\n",
      "[[12364    17  6850]\n",
      " [ 7572 22501  3787]\n",
      " [  142     2   368]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.64      0.63     19178\n",
      "           1       1.00      0.68      0.81     33890\n",
      "           2       0.04      0.71      0.07       535\n",
      "\n",
      "    accuracy                           0.66     53603\n",
      "   macro avg       0.55      0.68      0.50     53603\n",
      "weighted avg       0.85      0.66      0.74     53603\n",
      "\n",
      "[[12362    16  6800]\n",
      " [ 7475 22897  3518]\n",
      " [  153     0   382]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     19457\n",
      "           1       1.00      0.60      0.75     33586\n",
      "           2       0.03      0.70      0.06       560\n",
      "\n",
      "    accuracy                           0.62     53603\n",
      "   macro avg       0.55      0.65      0.48     53603\n",
      "weighted avg       0.85      0.62      0.70     53603\n",
      "\n",
      "[[12637     7  6813]\n",
      " [ 7473 20053  6060]\n",
      " [  167     0   393]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     19280\n",
      "           1       1.00      0.60      0.75     33810\n",
      "           2       0.03      0.71      0.05       513\n",
      "\n",
      "    accuracy                           0.62     53603\n",
      "   macro avg       0.55      0.65      0.48     53603\n",
      "weighted avg       0.86      0.62      0.70     53603\n",
      "\n",
      "[[12595    22  6663]\n",
      " [ 7349 20268  6193]\n",
      " [  148     1   364]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     19294\n",
      "           1       1.00      0.57      0.73     33773\n",
      "           2       0.03      0.70      0.05       536\n",
      "\n",
      "    accuracy                           0.60     53603\n",
      "   macro avg       0.55      0.64      0.47     53603\n",
      "weighted avg       0.85      0.60      0.69     53603\n",
      "\n",
      "[[12591    18  6685]\n",
      " [ 7496 19398  6879]\n",
      " [  160     0   376]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     19309\n",
      "           1       1.00      0.57      0.72     33740\n",
      "           2       0.03      0.69      0.05       554\n",
      "\n",
      "    accuracy                           0.60     53603\n",
      "   macro avg       0.55      0.64      0.47     53603\n",
      "weighted avg       0.85      0.60      0.69     53603\n",
      "\n",
      "[[12481    15  6813]\n",
      " [ 7280 19156  7304]\n",
      " [  169     0   385]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.66      0.64     19379\n",
      "           1       1.00      0.61      0.76     33674\n",
      "           2       0.03      0.70      0.06       550\n",
      "\n",
      "    accuracy                           0.63     53603\n",
      "   macro avg       0.55      0.66      0.49     53603\n",
      "weighted avg       0.85      0.63      0.71     53603\n",
      "\n",
      "[[12731    12  6636]\n",
      " [ 7457 20635  5582]\n",
      " [  164     0   386]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.45 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     19267\n",
      "           1       1.00      0.59      0.74     33784\n",
      "           2       0.03      0.70      0.05       552\n",
      "\n",
      "    accuracy                           0.61     53603\n",
      "   macro avg       0.55      0.65      0.48     53603\n",
      "weighted avg       0.85      0.61      0.70     53603\n",
      "\n",
      "[[12532    18  6717]\n",
      " [ 7327 19998  6459]\n",
      " [  166     2   384]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     14557\n",
      "           1       1.00      0.64      0.78     25520\n",
      "           2       0.03      0.70      0.06       423\n",
      "\n",
      "    accuracy                           0.64     40500\n",
      "   macro avg       0.55      0.66      0.49     40500\n",
      "weighted avg       0.85      0.64      0.72     40500\n",
      "\n",
      "[[ 9398    14  5145]\n",
      " [ 5530 16404  3586]\n",
      " [  126     2   295]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     14605\n",
      "           1       1.00      0.67      0.80     25518\n",
      "           2       0.03      0.74      0.07       377\n",
      "\n",
      "    accuracy                           0.66     40500\n",
      "   macro avg       0.55      0.69      0.50     40500\n",
      "weighted avg       0.85      0.66      0.74     40500\n",
      "\n",
      "[[ 9462    11  5132]\n",
      " [ 5655 17186  2677]\n",
      " [   99     0   278]]\n",
      "Accuracy is  0.74\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.63     14499\n",
      "           1       1.00      0.66      0.79     25595\n",
      "           2       0.03      0.71      0.07       406\n",
      "\n",
      "    accuracy                           0.66     40500\n",
      "   macro avg       0.55      0.67      0.50     40500\n",
      "weighted avg       0.85      0.66      0.73     40500\n",
      "\n",
      "[[ 9387    11  5101]\n",
      " [ 5700 16861  3034]\n",
      " [  117     0   289]]\n",
      "Accuracy is  0.73\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14829\n",
      "           1       1.00      0.60      0.75     25261\n",
      "           2       0.03      0.70      0.06       410\n",
      "\n",
      "    accuracy                           0.62     40500\n",
      "   macro avg       0.55      0.65      0.48     40500\n",
      "weighted avg       0.85      0.62      0.70     40500\n",
      "\n",
      "[[ 9642     5  5182]\n",
      " [ 5629 15118  4514]\n",
      " [  123     0   287]]\n",
      "Accuracy is  0.70\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 2567\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14601\n",
      "           1       1.00      0.60      0.75     25519\n",
      "           2       0.03      0.72      0.05       380\n",
      "\n",
      "    accuracy                           0.62     40500\n",
      "   macro avg       0.55      0.66      0.48     40500\n",
      "weighted avg       0.86      0.62      0.71     40500\n",
      "\n",
      "[[ 9535     9  5057]\n",
      " [ 5489 15405  4625]\n",
      " [  108     0   272]]\n",
      "Accuracy is  0.71\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     14631\n",
      "           1       1.00      0.58      0.74     25454\n",
      "           2       0.03      0.70      0.05       415\n",
      "\n",
      "    accuracy                           0.61     40500\n",
      "   macro avg       0.55      0.65      0.48     40500\n",
      "weighted avg       0.85      0.61      0.69     40500\n",
      "\n",
      "[[ 9557    10  5064]\n",
      " [ 5650 14878  4926]\n",
      " [  123     0   292]]\n",
      "Accuracy is  0.69\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14528\n",
      "           1       1.00      0.56      0.72     25557\n",
      "           2       0.03      0.69      0.05       415\n",
      "\n",
      "    accuracy                           0.59     40500\n",
      "   macro avg       0.55      0.63      0.47     40500\n",
      "weighted avg       0.86      0.59      0.68     40500\n",
      "\n",
      "[[ 9395     7  5126]\n",
      " [ 5465 14313  5779]\n",
      " [  130     0   285]]\n",
      "Accuracy is  0.68\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.62      0.65      0.64     14570\n",
      "           1       1.00      0.64      0.78     25509\n",
      "           2       0.03      0.71      0.06       421\n",
      "\n",
      "    accuracy                           0.64     40500\n",
      "   macro avg       0.55      0.67      0.49     40500\n",
      "weighted avg       0.85      0.64      0.72     40500\n",
      "\n",
      "[[ 9505    10  5055]\n",
      " [ 5690 16248  3571]\n",
      " [  123     0   298]]\n",
      "Accuracy is  0.72\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.34 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.63      0.65      0.64     14576\n",
      "           1       1.00      0.58      0.73     25485\n",
      "           2       0.03      0.69      0.06       439\n",
      "\n",
      "    accuracy                           0.61     40500\n",
      "   macro avg       0.55      0.64      0.48     40500\n",
      "weighted avg       0.85      0.61      0.69     40500\n",
      "\n",
      "[[ 9520    13  5043]\n",
      " [ 5535 14804  5146]\n",
      " [  135     0   304]]\n",
      "Accuracy is  0.69\n",
      "The Average of All acuracies 0.7109876543209876\n"
     ]
    }
   ],
   "source": [
    "length,AverageAcc,MNB=NaiveBayesClassifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AverageAcc)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "from lightgbm import LGBMClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.ensemble import  VotingClassifier\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Voting_Classifier(Data1,Data2):\n",
    "    Test_size=[0.30,0.25,0.21,0.22,0.33,0.36,0.42,0.45,0.34,0.48]\n",
    "    Random_state=[525478,7505,32578,3257,2567,4789,8547,657,42,74568]\n",
    "    AverageAccuracy=[]\n",
    "    k=0\n",
    "    print('/'*60)\n",
    "    for i in Test_size:\n",
    "        for j in Random_state:\n",
    "            print('/'*60)\n",
    "            print(\"The Test_size\",i,\"and random state is\",j) \n",
    "            X_train,X_test,y_train,y_test=train_test_split(Data1,Data2,test_size=i,random_state=j)\n",
    "            LGf=LogisticRegression()\n",
    "            RFC2=RandomForestClassifier(n_estimators=300,criterion='entropy',max_depth=6)\n",
    "            LGB=LGBMClassifier(max_depth=-1,learning_rate=0.1,n_estimators=300)\n",
    "            Predict1=LGf.fit(X_train,y_train)\n",
    "            Predict2=RFC2.fit(X_train,y_train)\n",
    "            Predict3=LGB.fit(X_train,y_train)\n",
    "            voting_clf =VotingClassifier(estimators=[('lightbgm',Predict3), ('RF',Predict2),('Logclass',Predict1)], voting='hard')\n",
    "            PredictModel=voting_clf.fit(X_train,y_train)\n",
    "            predictions=PredictModel.predict(X_test)\n",
    "            print(metrics.classification_report(y_test, predictions))\n",
    "            print(metrics.confusion_matrix(y_test, predictions))\n",
    "            F1score=metrics.classification_report(y_test, predictions).split()[-2]\n",
    "            F1=float(F1score)\n",
    "            AverageAccuracy.append(F1)\n",
    "            k=k+1\n",
    "            print(\"Accuracy is \",F1score)\n",
    "    return(k,AverageAccuracy)             \n",
    "                                       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////////////////////////////////////\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12835\n",
      "           1       1.00      1.00      1.00     22531\n",
      "           2       0.56      0.01      0.03       369\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.84      0.67      0.67     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12831     0     4]\n",
      " [    0 22531     0]\n",
      " [  364     0     5]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12876\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.20      0.00      0.01       334\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.72      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12872     0     4]\n",
      " [    0 22525     0]\n",
      " [  333     0     1]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12824\n",
      "           1       1.00      1.00      1.00     22552\n",
      "           2       0.33      0.00      0.01       359\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.77      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12822     0     2]\n",
      " [    0 22552     0]\n",
      " [  358     0     1]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     13080\n",
      "           1       1.00      1.00      1.00     22295\n",
      "           2       0.00      0.00      0.00       360\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.66      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[13078     0     2]\n",
      " [    0 22295     0]\n",
      " [  360     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12913\n",
      "           1       1.00      1.00      1.00     22483\n",
      "           2       0.33      0.00      0.01       339\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.77      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.99     35735\n",
      "\n",
      "[[12911     0     2]\n",
      " [    0 22483     0]\n",
      " [  338     0     1]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12899\n",
      "           1       1.00      1.00      1.00     22470\n",
      "           2       0.50      0.01      0.02       366\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.82      0.67      0.67     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12896     0     3]\n",
      " [    0 22470     0]\n",
      " [  363     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12802\n",
      "           1       1.00      1.00      1.00     22571\n",
      "           2       0.50      0.00      0.01       362\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.82      0.67      0.66     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12801     0     1]\n",
      " [    0 22571     0]\n",
      " [  361     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12833\n",
      "           1       1.00      1.00      1.00     22525\n",
      "           2       0.75      0.01      0.02       377\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.91      0.67      0.67     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12832     0     1]\n",
      " [    0 22525     0]\n",
      " [  374     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     12906\n",
      "           1       1.00      1.00      1.00     22433\n",
      "           2       0.80      0.01      0.02       396\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.92      0.67      0.67     35735\n",
      "weighted avg       0.99      0.99      0.98     35735\n",
      "\n",
      "[[12905     0     1]\n",
      " [    0 22433     0]\n",
      " [  392     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.3 and random state is 74568\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     12786\n",
      "           1       1.00      1.00      1.00     22549\n",
      "           2       0.33      0.01      0.01       400\n",
      "\n",
      "    accuracy                           0.99     35735\n",
      "   macro avg       0.77      0.67      0.66     35735\n",
      "weighted avg       0.98      0.99      0.98     35735\n",
      "\n",
      "[[12782     0     4]\n",
      " [    0 22549     0]\n",
      " [  398     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10729\n",
      "           1       1.00      1.00      1.00     18741\n",
      "           2       0.60      0.01      0.02       309\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.86      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.98     29779\n",
      "\n",
      "[[10727     0     2]\n",
      " [    0 18741     0]\n",
      " [  306     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10722\n",
      "           1       1.00      1.00      1.00     18771\n",
      "           2       0.25      0.00      0.01       286\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.74      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10719     0     3]\n",
      " [    0 18771     0]\n",
      " [  285     0     1]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10677\n",
      "           1       1.00      1.00      1.00     18795\n",
      "           2       0.50      0.00      0.01       307\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.82      0.67      0.66     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10676     0     1]\n",
      " [    0 18795     0]\n",
      " [  306     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10897\n",
      "           1       1.00      1.00      1.00     18580\n",
      "           2       0.67      0.01      0.01       302\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10896     0     1]\n",
      " [    0 18580     0]\n",
      " [  300     0     2]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     10792\n",
      "           1       1.00      1.00      1.00     18710\n",
      "           2       1.00      0.00      0.01       277\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.99      0.67      0.66     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10792     0     0]\n",
      " [    0 18710     0]\n",
      " [  276     0     1]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 4789\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10728\n",
      "           1       1.00      1.00      1.00     18750\n",
      "           2       0.43      0.01      0.02       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.80      0.67      0.67     29779\n",
      "weighted avg       0.98      0.99      0.99     29779\n",
      "\n",
      "[[10724     0     4]\n",
      " [    0 18750     0]\n",
      " [  298     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10685\n",
      "           1       1.00      1.00      1.00     18793\n",
      "           2       0.67      0.01      0.01       301\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.88      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.99     29779\n",
      "\n",
      "[[10684     0     1]\n",
      " [    0 18793     0]\n",
      " [  299     0     2]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     10698\n",
      "           1       1.00      1.00      1.00     18766\n",
      "           2       0.50      0.01      0.02       315\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.82      0.67      0.67     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10695     0     3]\n",
      " [    0 18766     0]\n",
      " [  312     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     10762\n",
      "           1       1.00      1.00      1.00     18682\n",
      "           2       0.80      0.01      0.02       335\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.92      0.67      0.67     29779\n",
      "weighted avg       0.99      0.99      0.98     29779\n",
      "\n",
      "[[10761     0     1]\n",
      " [    0 18682     0]\n",
      " [  331     0     4]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.25 and random state is 74568\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98     10669\n",
      "           1       1.00      1.00      1.00     18779\n",
      "           2       0.40      0.01      0.01       331\n",
      "\n",
      "    accuracy                           0.99     29779\n",
      "   macro avg       0.79      0.67      0.67     29779\n",
      "weighted avg       0.98      0.99      0.98     29779\n",
      "\n",
      "[[10666     0     3]\n",
      " [    0 18779     0]\n",
      " [  329     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9022\n",
      "           1       1.00      1.00      1.00     15724\n",
      "           2       0.50      0.00      0.01       269\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.82      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 9021     0     1]\n",
      " [    0 15724     0]\n",
      " [  268     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8993\n",
      "           1       1.00      1.00      1.00     15776\n",
      "           2       0.00      0.00      0.00       246\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.99     25015\n",
      "\n",
      "[[ 8990     0     3]\n",
      " [    0 15776     0]\n",
      " [  246     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      8947\n",
      "           1       1.00      1.00      1.00     15791\n",
      "           2       0.33      0.00      0.01       277\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.77      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8945     0     2]\n",
      " [    0 15791     0]\n",
      " [  276     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9173\n",
      "           1       1.00      1.00      1.00     15589\n",
      "           2       0.50      0.01      0.02       253\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.82      0.67      0.67     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 9171     0     2]\n",
      " [    0 15589     0]\n",
      " [  251     0     2]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9058\n",
      "           1       1.00      1.00      1.00     15725\n",
      "           2       0.00      0.00      0.00       232\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.99     25015\n",
      "\n",
      "[[ 9056     0     2]\n",
      " [    0 15725     0]\n",
      " [  232     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8935\n",
      "           1       1.00      1.00      1.00     15825\n",
      "           2       0.50      0.01      0.02       255\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.82      0.67      0.67     25015\n",
      "weighted avg       0.99      0.99      0.99     25015\n",
      "\n",
      "[[ 8932     0     3]\n",
      " [    0 15825     0]\n",
      " [  252     0     3]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8932\n",
      "           1       1.00      1.00      1.00     15818\n",
      "           2       0.00      0.00      0.00       265\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.66      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8931     0     1]\n",
      " [    0 15818     0]\n",
      " [  265     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9004\n",
      "           1       1.00      1.00      1.00     15750\n",
      "           2       0.33      0.00      0.01       261\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.77      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 9002     0     2]\n",
      " [    0 15750     0]\n",
      " [  260     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      9064\n",
      "           1       1.00      1.00      1.00     15669\n",
      "           2       0.33      0.01      0.01       282\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.77      0.67      0.67     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 9060     0     4]\n",
      " [    0 15669     0]\n",
      " [  280     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.21 and random state is 74568\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      8936\n",
      "           1       1.00      1.00      1.00     15808\n",
      "           2       0.33      0.00      0.01       271\n",
      "\n",
      "    accuracy                           0.99     25015\n",
      "   macro avg       0.77      0.67      0.66     25015\n",
      "weighted avg       0.98      0.99      0.98     25015\n",
      "\n",
      "[[ 8934     0     2]\n",
      " [    0 15808     0]\n",
      " [  270     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 525478\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9444\n",
      "           1       1.00      1.00      1.00     16483\n",
      "           2       0.25      0.00      0.01       279\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.74      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9441     0     3]\n",
      " [    0 16483     0]\n",
      " [  278     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 7505\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9430\n",
      "           1       1.00      1.00      1.00     16519\n",
      "           2       0.25      0.00      0.01       257\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.74      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.99     26206\n",
      "\n",
      "[[ 9427     0     3]\n",
      " [    0 16519     0]\n",
      " [  256     0     1]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 32578\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9383\n",
      "           1       1.00      1.00      1.00     16539\n",
      "           2       0.00      0.00      0.00       284\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.66      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9382     0     1]\n",
      " [    0 16539     0]\n",
      " [  284     0     0]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 3257\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9612\n",
      "           1       1.00      1.00      1.00     16328\n",
      "           2       0.50      0.01      0.01       266\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.82      0.67      0.67     26206\n",
      "weighted avg       0.99      0.99      0.98     26206\n",
      "\n",
      "[[ 9610     0     2]\n",
      " [    0 16328     0]\n",
      " [  264     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 2567\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      9493\n",
      "           1       1.00      1.00      1.00     16471\n",
      "           2       0.00      0.00      0.00       242\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.66      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.99     26206\n",
      "\n",
      "[[ 9492     0     1]\n",
      " [    0 16471     0]\n",
      " [  242     0     0]]\n",
      "Accuracy is  0.99\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 4789\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9385\n",
      "           1       1.00      1.00      1.00     16553\n",
      "           2       0.50      0.01      0.01       268\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.82      0.67      0.67     26206\n",
      "weighted avg       0.99      0.99      0.98     26206\n",
      "\n",
      "[[ 9383     0     2]\n",
      " [    0 16553     0]\n",
      " [  266     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 8547\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9372\n",
      "           1       1.00      1.00      1.00     16559\n",
      "           2       0.50      0.00      0.01       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.82      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9371     0     1]\n",
      " [    0 16559     0]\n",
      " [  274     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 657\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      9438\n",
      "           1       1.00      1.00      1.00     16493\n",
      "           2       0.40      0.01      0.01       275\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.79      0.67      0.67     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9435     0     3]\n",
      " [    0 16493     0]\n",
      " [  273     0     2]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 42\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      9508\n",
      "           1       1.00      1.00      1.00     16399\n",
      "           2       0.50      0.01      0.02       299\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.82      0.67      0.67     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9505     0     3]\n",
      " [    0 16399     0]\n",
      " [  296     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.22 and random state is 74568\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.98      9371\n",
      "           1       1.00      1.00      1.00     16550\n",
      "           2       0.33      0.00      0.01       285\n",
      "\n",
      "    accuracy                           0.99     26206\n",
      "   macro avg       0.77      0.67      0.66     26206\n",
      "weighted avg       0.98      0.99      0.98     26206\n",
      "\n",
      "[[ 9369     0     2]\n",
      " [    0 16550     0]\n",
      " [  284     0     1]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 525478\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99     14092\n",
      "           1       1.00      1.00      1.00     24806\n",
      "           2       0.60      0.01      0.01       411\n",
      "\n",
      "    accuracy                           0.99     39309\n",
      "   macro avg       0.86      0.67      0.67     39309\n",
      "weighted avg       0.99      0.99      0.98     39309\n",
      "\n",
      "[[14090     0     2]\n",
      " [    0 24806     0]\n",
      " [  408     0     3]]\n",
      "Accuracy is  0.98\n",
      "////////////////////////////////////////////////////////////\n",
      "The Test_size 0.33 and random state is 7505\n"
     ]
    }
   ],
   "source": [
    "length,AverageAcc=Voting_Classifier(X,y)\n",
    "Sum_of_Acc_Dtree=sum(AverageAcc)\n",
    "print(\"The Average of All acuracies\",(Sum_of_Acc_Dtree/length))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
